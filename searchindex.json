[{"section":"Blog","slug":"/tin-cong-nghe/amazon-kien-cpsc-ve-trach-nhiem-thu-hoi-san-pham-nguy-hiem/","title":"Amazon kiện CPSC về trách nhiệm thu hồi sản phẩm nguy hiểm","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Amazon, CPSC, Thương mại điện tử","content":"Tổng quan về vụ kiện Mình muốn chia sẻ với các bạn về một vụ kiện đang thu hút sự chú ý trong ngành thương mại điện tử. Amazon đã kiện CPSC (Ủy ban An toàn Sản phẩm Tiêu dùng Hoa Kỳ) sau khi cơ quan này cho rằng Amazon phải chịu trách nhiệm thu hồi tất cả các sản phẩm nguy hiểm trên nền tảng của mình, bao gồm cả những sản phẩm được bán bởi các bên thứ ba.\nTrong một vụ kiện được nộp tuần trước, Amazon cáo buộc CPSC đã kéo dài luật an toàn người tiêu dùng bằng cách coi gã khổng lồ thương mại điện tử này như một nhà phân phối thay vì một nhà cung cấp dịch vụ logistics.\nLý do kiện cáo Trước đó, CPSC đã kiện Amazon vào năm 2021, tuyên bố rằng công ty đã không thu hồi đúng cách hàng chục ngàn mặt hàng nguy hiểm, bao gồm cả bộ đồ trẻ em dễ cháy và các thiết bị phát hiện carbon monoxide lỗi. Mặc dù Amazon đã gỡ bỏ các sản phẩm có vấn đề và gửi thông báo đến người mua, CPSC cho rằng Amazon đã \u0026ldquo;hạ thấp mức độ nghiêm trọng của mối nguy hiểm.\u0026rdquo;\nCPSC đã khẳng định lại quyết định của một thẩm phán luật hành chính rằng Amazon là một nhà phân phối, do đó có trách nhiệm thực hiện việc thu hồi hàng hóa từ bên thứ ba.\nQuan điểm của Amazon Tuy nhiên, Amazon phân loại mình là một nhà cung cấp dịch vụ logistics bên thứ ba mà \u0026ldquo;không sản xuất, sở hữu, hoặc bán những sản phẩm đó,\u0026rdquo; điều này có nghĩa là CPSC không có quyền ban hành lệnh thu hồi đối với công ty. Ngoài ra, Amazon còn cho rằng cấu trúc của CPSC là không hợp hiến, vì nó cho phép các ủy viên \u0026ldquo;hành động như thẩm phán, bồi thẩm đoàn và công tố viên trong cùng một thủ tục.\u0026rdquo;\nVào năm 2023, Amazon đã ra mắt một trang thu hồi sản phẩm trên website của mình.\nÝ kiến từ chuyên gia William Wallace, giám đốc vận động an toàn của Consumer Reports, đã phát biểu về vụ kiện này:\n\u0026ldquo;Luật pháp rõ ràng rằng Amazon là một ‘nhà phân phối’ trong trường hợp này và phải thực hiện việc thu hồi.\u0026rdquo;\nÔng cũng cho rằng: \u0026ldquo;Thật vô lý khi cho rằng chỉ vì một công ty tổ chức một thị trường trực tuyến, nó sẽ được miễn trừ khỏi các yêu cầu hợp lý nhằm giúp loại bỏ các sản phẩm nguy hiểm ra khỏi nhà của mọi người và ngăn chặn chúng bị bán.\u0026rdquo;\nKết luận Vụ kiện này không chỉ ảnh hưởng đến Amazon mà còn có thể định hình lại cách thức mà các nền tảng thương mại điện tử xử lý trách nhiệm liên quan đến sản phẩm nguy hiểm. Mình khuyến khích các bạn theo dõi diễn biến của vụ kiện này để có cái nhìn sâu sắc hơn về trách nhiệm của các công ty trong việc bảo vệ người tiêu dùng.\n"},{"section":"Blog","slug":"/tin-cong-nghe/canh-tranh-trong-thi-truong-cong-cu-tim-kiem-ai-perplexity-va-google/","title":"Cạnh tranh trong thị trường công cụ tìm kiếm AI: Perplexity và Google","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Công nghệ, Phân tích, Truyền thông","tags":"AI, Công cụ tìm kiếm, Perplexity","content":"Giới thiệu Chào mọi người, hôm nay mình muốn chia sẻ về một quảng cáo mới của Perplexity, một công cụ tìm kiếm AI đang ngày càng thu hút sự chú ý. Quảng cáo này có sự tham gia của Lee Jung-jae, ngôi sao trong bộ phim Squid Game, khi anh ấy phải trả lời các câu hỏi để thoát khỏi một căn phòng. Một trong những câu hỏi đó đã chỉ trích sự sai sót của AI Google về cách làm cho phô mai dính vào pizza.\nVấn đề với Google AI Google đã sử dụng kết quả từ khắp nơi trên web để tạo ra những tóm tắt bằng công cụ AI của mình. Tuy nhiên, người dùng đã nhanh chóng phát hiện ra một số vấn đề với tính năng này, trong đó có một phản hồi gây tranh cãi mà Google đã đưa ra, khuyên người dùng ‘Trộn khoảng 1/8 cup keo Elmer vào nước sốt’ để làm cho phô mai dính vào pizza.\nLưu ý: Đây là một ví dụ rõ ràng về việc AI có thể đưa ra thông tin sai lệch, vì keo không phải là một thành phần thực phẩm.\nCạnh tranh từ Perplexity Để đối phó với sự cạnh tranh ngày càng tăng từ Perplexity và các công cụ khác, Google đã thông báo rằng sẽ bắt đầu hiển thị các AI Overviews cho nhiều truy vấn hơn, bất kể người dùng có muốn hay không. Trong khi đó, Perplexity tự giới thiệu mình là một \u0026lsquo;công cụ trả lời\u0026rsquo;, mặc dù họ cũng đã bị cáo buộc sao chép nội dung từ các nguồn khác.\nQuảng cáo mới của Perplexity Trong quảng cáo mới, Lee sử dụng điện thoại của mình để tìm kiếm câu trả lời. Sau khi nhận được kết quả không như mong đợi từ \u0026lsquo;Poogle\u0026rsquo;, anh ấy đã chuyển sang Perplexity để có câu trả lời chính xác hơn. AI của Perplexity đã trả lời: “Sử dụng mozzarella tươi, ít độ ẩm. Đừng sử dụng keo.”\nKết luận Sự cạnh tranh giữa Perplexity và Google là một ví dụ điển hình về cách công nghệ AI đang phát triển và những thách thức mà nó đang phải đối mặt. Mình hy vọng rằng qua bài viết này, mọi người có thể nhận ra tầm quan trọng của việc kiểm tra thông tin từ các nguồn khác nhau, đặc biệt khi sử dụng công nghệ AI.\n"},{"section":"Blog","slug":"/tin-cong-nghe/cap-nhat-moi-tu-google-cho-chromecast-giai-phap-khac-phuc-su-co/","title":"Cập nhật mới từ Google cho Chromecast: Giải pháp khắc phục sự cố","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Chromecast, Google, Cập nhật","content":"Cập nhật từ Google cho Chromecast Mình muốn chia sẻ với các bạn về một bản cập nhật quan trọng từ Google liên quan đến Chromecast. Vào thứ Năm vừa qua, Google đã bắt đầu phát hành một bản cập nhật để khắc phục sự cố với các thiết bị Chromecast thế hệ thứ hai và Chromecast Audio, những thiết bị này đã mất khả năng phát hình.\nGoogle đã thông báo rằng \u0026ldquo;Mọi thứ giờ đây nên hoạt động bình thường\u0026rdquo; qua email gửi đến những người dùng bị ảnh hưởng.\nNgoài ra, bản cập nhật mới của ứng dụng Google Home (phiên bản 3.30.1.6 cho Android và 3.30.106 cho iOS) cũng bao gồm khả năng thiết lập và phục hồi các thiết bị Chromecast bị lỗi sau khi reset. Mặc dù Google không nêu rõ lý do vì sao các thiết bị lại ngừng hoạt động, nhưng một người dùng trên Reddit đã tìm thấy chứng cứ rằng lỗi \u0026ldquo;untrusted device\u0026rdquo; có thể do một chứng chỉ hết hạn được tích hợp trong các thiết bị đã ngừng sản xuất.\nThông tin về bản cập nhật Bản cập nhật ứng dụng Google Home đang được phát hành từ hôm nay. Lưu ý: Bản cập nhật có thể mất vài ngày để đến tay tất cả người dùng. Google sẽ cập nhật tình hình trên trang cộng đồng Google Nest. Lời khuyên thực tế Nếu bạn là một trong số những người dùng bị ảnh hưởng, hãy đảm bảo rằng bạn đã cập nhật ứng dụng Google Home lên phiên bản mới nhất. Theo dõi trang cộng đồng để nhận thông tin mới nhất về tình hình và các giải pháp khả thi. Hy vọng thông tin này hữu ích cho các bạn! Nếu có bất kỳ câu hỏi nào, đừng ngần ngại hỏi nhé!\n"},{"section":"Blog","slug":"/tin-cong-nghe/hop-tac-giua-virgin-atlantic-va-joby-aviation-khoi-dau-dich-vu-taxi-hang-khong-tai-vuong-quoc-anh/","title":"Hợp tác giữa Virgin Atlantic và Joby Aviation: Khởi đầu dịch vụ taxi hàng không tại Vương Quốc Anh","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Taxi hàng không, Máy bay điện, Hàng không","content":"Giới thiệu Mình rất vui được chia sẻ thông tin về một sự kiện thú vị trong ngành hàng không. Virgin Atlantic đã hợp tác với Joby Aviation để ra mắt dịch vụ taxi hàng không tại Vương Quốc Anh. Đây là một bước tiến quan trọng trong việc khai thác các loại máy bay điện mới, giúp mang lại trải nghiệm bay tiện lợi cho khách hàng.\nThông tin về máy bay Joby Máy bay điện của Joby có thiết kế với sáu rotor và có thể chở năm người, bao gồm cả phi công. Nó có khả năng cất cánh thẳng đứng như một chiếc trực thăng và sau đó chuyển sang bay về phía trước nhờ vào các rotor nghiêng. Joby tự hào về khả năng đạt tốc độ tối đa 200mph, di chuyển 150 dặm chỉ với một lần sạc và 100 lần yên tĩnh hơn so với máy bay truyền thống.\nĐặt chỗ dễ dàng Dưới sự hợp tác này, khách hàng có thể đặt chỗ cho một chuyến bay trên máy bay nhiều rotor của Joby thông qua website và ứng dụng của Virgin Atlantic. Các máy bay sẽ có logo của cả Joby và Virgin Atlantic.\nLưu ý: Dịch vụ tại Vương Quốc Anh sẽ phải chờ Joby hoàn tất việc chứng nhận loại máy bay để đảm bảo đáp ứng tất cả các tiêu chuẩn thiết kế và an toàn của FAA.\nNhững thách thức trong ngành taxi hàng không Các nhà điều hành taxi hàng không đang đối mặt với nhiều thách thức trước khi dịch vụ trở thành hiện thực, bao gồm quy định về an toàn và thiết kế sân bay. Cơ quan Hàng không Dân dụng Vương Quốc Anh đã bắt đầu xem xét cách các sân bay cần phải được đánh giá lại cho các chuyến bay taxi hàng không, bao gồm việc sạc điện và không gian trên không.\nKế hoạch của Joby và Virgin Atlantic Joby và Virgin Atlantic đang hình dung những chuyến bay kéo dài 15 phút từ Sân bay Manchester đến Leeds, hoặc 8 phút từ Sân bay Heathrow đến Canary Wharf. Joby đang lên kế hoạch cho một mạng lưới các địa điểm hạ cánh trên khắp Vương Quốc Anh và dự kiến sẽ cung cấp mức giá so với \u0026ldquo;các tùy chọn chia sẻ xe mặt đất cao cấp hiện có\u0026rdquo; khi ra mắt.\nKết luận Virgin Atlantic không phải là hãng hàng không đầu tiên hợp tác với Joby. Hãng hàng không Delta Air Lines đã đầu tư 200 triệu USD vào Joby vào năm 2022, và Toyota cũng đã cam kết đầu tư 500 triệu USD vào năm ngoái. Mặc dù Virgin Atlantic không đầu tư vào Joby trong khuôn khổ hợp tác này, nhưng sự hợp tác này đánh dấu một bước tiến quan trọng trong việc phát triển dịch vụ taxi hàng không.\nMình rất mong chờ được thấy sự phát triển của dịch vụ này trong tương lai gần và hy vọng rằng nó sẽ mang lại những trải nghiệm bay an toàn và tiện lợi cho mọi người.\n"},{"section":"Blog","slug":"/web-development/aws/huong-dan-bao-mat-api-gateway-voi-lambda-authorizer-su-dung-jwt/","title":"Hướng dẫn bảo mật API Gateway với Lambda Authorizer sử dụng JWT","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Security, AWS, Web development","tags":"API Gateway, Lambda, JWT","content":"Giới thiệu Trong bài viết trước, mình đã khám phá cách triển khai một REST API sử dụng API Gateway, AWS Lambda, DynamoDB và Terraform. Kiến trúc bao gồm:\nMột API Gateway để triển khai các endpoint REST API. AWS Lambda xử lý logic backend. DynamoDB phục vụ như cơ sở dữ liệu. Tuy nhiên, một vấn đề bảo mật quan trọng là bất kỳ ai có URL gọi API đều có thể truy cập và thực hiện các thao tác trên API. Để hạn chế quyền truy cập API, có thể xem xét một số cách tiếp cận:\nChính sách tài nguyên API Gateway: Giới hạn quyền truy cập cho các tài khoản AWS hoặc dải IP cụ thể. Xác thực IAM: Yêu cầu khách hàng ký các yêu cầu bằng thông tin xác thực AWS IAM. Cognito User Pools: Triển khai xác thực và ủy quyền người dùng với Amazon Cognito. Lambda Authorizers: Sử dụng một hàm Lambda tùy chỉnh để xác thực logic ủy quyền trước khi cho phép truy cập. Trong hướng dẫn này, mình sẽ tập trung vào việc bảo mật API bằng cách sử dụng Lambda Authorizer với JSON Web Tokens (JWTs).\nJWT Token là gì? Một JSON Web Token (JWT) là một định dạng token ngắn gọn và an toàn cho URL được sử dụng để xác thực và ủy quyền. Nó bao gồm ba phần:\nHeader: Chứa siêu dữ liệu như loại token và thuật toán ký. Payload: Giữ các claims (thông tin) về người dùng, chẳng hạn như ID người dùng và quyền truy cập. Signature: Đảm bảo tính toàn vẹn của token, được tạo ra bằng cách sử dụng một khóa bí mật hoặc cặp khóa công khai/riêng. JWTs thường được sử dụng trong các luồng xác thực, trong đó một client nhận được token khi đăng nhập và sử dụng nó để truy cập các tài nguyên được bảo vệ.\nKiến trúc Dưới đây là kiến trúc serverless mà mình sẽ xử lý.\nBước 1: Tạo IAM Role cho Lambda với hàm Lambda Mình thiết lập IAM Role cần thiết cho hàm Lambda để truy cập DynamoDB và thực hiện các thao tác CRUD.\nresource \u0026#34;aws_iam_role\u0026#34; \u0026#34;lambda_role\u0026#34; { name = \u0026#34;lambda_execution_role\u0026#34; assume_role_policy = jsonencode({ \u0026#34;Version\u0026#34; : \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34; : [{ \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34; : { \u0026#34;Service\u0026#34; : \u0026#34;lambda.amazonaws.com\u0026#34; }, \u0026#34;Action\u0026#34; : \u0026#34;sts:AssumeRole\u0026#34; }] }) } Mình cũng tạo chính sách để truy cập DynamoDB.\nresource \u0026#34;aws_iam_policy\u0026#34; \u0026#34;DynamoDBAccessPolicy\u0026#34; { name = \u0026#34;DynamoDBAccessPolicy\u0026#34; description = \u0026#34;DynamoDBAccessPolicy\u0026#34; policy = jsonencode( { \u0026#34;Version\u0026#34; : \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34; : [ { \u0026#34;Action\u0026#34; : [ \u0026#34;dynamodb:List*\u0026#34;, \u0026#34;dynamodb:DescribeReservedCapacity*\u0026#34;, \u0026#34;dynamodb:DescribeLimits\u0026#34;, \u0026#34;dynamodb:DescribeTimeToLive\u0026#34; ], \u0026#34;Resource\u0026#34; : \u0026#34;*\u0026#34;, \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34; }, { \u0026#34;Action\u0026#34; : [ \u0026#34;dynamodb:BatchGet*\u0026#34;, \u0026#34;dynamodb:DescribeStream\u0026#34;, \u0026#34;dynamodb:DescribeTable\u0026#34;, \u0026#34;dynamodb:Get*\u0026#34;, \u0026#34;dynamodb:Query\u0026#34;, \u0026#34;dynamodb:Scan\u0026#34;, \u0026#34;dynamodb:BatchWrite*\u0026#34;, \u0026#34;dynamodb:CreateTable\u0026#34;, \u0026#34;dynamodb:Delete*\u0026#34;, \u0026#34;dynamodb:Update*\u0026#34;, \u0026#34;dynamodb:PutItem\u0026#34; ], \u0026#34;Resource\u0026#34; : [ \u0026#34;arn:aws:dynamodb:*:*:table/Books_Table\u0026#34; ], \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34; } ] } ) } Mình gán chính sách cho role.\nresource \u0026#34;aws_iam_policy_attachment\u0026#34; \u0026#34;lambda_basic_execution\u0026#34; { name = \u0026#34;lambda_basic_execution\u0026#34; roles = [aws_iam_role.lambda_role.name] policy_arn = \u0026#34;arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\u0026#34; } resource \u0026#34;aws_iam_policy_attachment\u0026#34; \u0026#34;lambda_dynamodb_access\u0026#34; { name = \u0026#34;lambda_dynamodb_access\u0026#34; roles = [aws_iam_role.lambda_role.name] policy_arn = aws_iam_policy.DynamoDBAccessPolicy.arn } Mình cũng nén mã nguồn của hàm Lambda.\ndata \u0026#34;archive_file\u0026#34; \u0026#34;lambda_function_archive\u0026#34; { type = \u0026#34;zip\u0026#34; source_dir = \u0026#34;${path.module}/lambda\u0026#34; output_path = \u0026#34;${path.module}/lambda_function.zip\u0026#34; } Mình tạo hàm Lambda theo cấu hình sau:\nresource \u0026#34;aws_lambda_function\u0026#34; \u0026#34;book_lambda_function\u0026#34; { function_name = \u0026#34;Books_Lambda\u0026#34; filename = \u0026#34;${path.module}/lambda_function.zip\u0026#34; runtime = \u0026#34;python3.12\u0026#34; handler = \u0026#34;lambda_function.lambda_handler\u0026#34; memory_size = 128 timeout = 10 environment { variables = { DYNAMODB_TABLE = \u0026#34;Books_Table\u0026#34; } } source_code_hash = data.archive_file.lambda_function_archive.output_base64sha256 role = aws_iam_role.lambda_role.arn } Mình cũng tạo nhóm log CloudWatch cho hàm Lambda.\nresource \u0026#34;aws_cloudwatch_log_group\u0026#34; \u0026#34;book_lambda_function_cloudwatch\u0026#34; { name = \u0026#34;/aws/lambda/${aws_lambda_function.book_lambda_function.function_name}\u0026#34; retention_in_days = 7 } Bước 2: Thiết lập bảng DynamoDB Mình tạo một bảng DynamoDB để lưu trữ hồ sơ sách. Và tạo các bản ghi mẫu từ books.json.\nresource \u0026#34;aws_dynamodb_table\u0026#34; \u0026#34;books_table\u0026#34; { name = \u0026#34;Books_Table\u0026#34; billing_mode = \u0026#34;PROVISIONED\u0026#34; read_capacity = 5 write_capacity = 5 hash_key = \u0026#34;book_id\u0026#34; attribute { name = \u0026#34;book_id\u0026#34; type = \u0026#34;S\u0026#34; } } locals { json_data = file(\u0026#34;${path.module}/books.json\u0026#34;) books = jsondecode(local.json_data) } resource \u0026#34;aws_dynamodb_table_item\u0026#34; \u0026#34;books\u0026#34; { for_each = local.books table_name = aws_dynamodb_table.books_table.name hash_key = aws_dynamodb_table.books_table.hash_key item = jsonencode(each.value) } Bước 3: Thiết lập API Gateway với các phương thức, tài nguyên, giai đoạn, authorizer API Gateway hoạt động như một proxy, chuyển tiếp các yêu cầu HTTP đến hàm Lambda bằng cách sử dụng yêu cầu POST.\nMình định nghĩa các phương thức API với xác thực \u0026ldquo;CUSTOM\u0026rdquo; và gán authorizer cho nó.\nresource \u0026#34;aws_api_gateway_rest_api\u0026#34; \u0026#34;API-gateway\u0026#34; { name = \u0026#34;lambda_rest_api\u0026#34; description = \u0026#34;This is the REST API for Best Books\u0026#34; endpoint_configuration { types = [\u0026#34;REGIONAL\u0026#34;] } } resource \u0026#34;aws_api_gateway_resource\u0026#34; \u0026#34;API-resource-book\u0026#34; { rest_api_id = aws_api_gateway_rest_api.API-gateway.id parent_id = aws_api_gateway_rest_api.API-gateway.root_resource_id path_part = \u0026#34;book\u0026#34; } resource \u0026#34;aws_api_gateway_resource\u0026#34; \u0026#34;API-resource-books\u0026#34; { rest_api_id = aws_api_gateway_rest_api.API-gateway.id parent_id = aws_api_gateway_rest_api.API-gateway.root_resource_id path_part = \u0026#34;books\u0026#34; } resource \u0026#34;aws_api_gateway_authorizer\u0026#34; \u0026#34;my_authorizer\u0026#34; { name = \u0026#34;my_authorizer\u0026#34; rest_api_id = aws_api_gateway_rest_api.API-gateway.id authorizer_uri = \u0026#34;arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/${aws_lambda_function.lambda_authorizer.arn}/invocations\u0026#34; identity_source = \u0026#34;method.request.header.authorizationToken\u0026#34; authorizer_result_ttl_in_seconds = 0 } Tiếp theo, mình định nghĩa các phương thức cho từng tài nguyên.\nresource \u0026#34;aws_api_gateway_method\u0026#34; \u0026#34;GET_one_method\u0026#34; { rest_api_id = aws_api_gateway_rest_api.API-gateway.id resource_id = aws_api_gateway_resource.API-resource-book.id http_method = \u0026#34;GET\u0026#34; authorization = \u0026#34;CUSTOM\u0026#34; authorizer_id = aws_api_gateway_authorizer.my_authorizer.id } resource \u0026#34;aws_api_gateway_integration\u0026#34; \u0026#34;GET_one_lambda_integration\u0026#34; { rest_api_id = aws_api_gateway_rest_api.API-gateway.id resource_id = aws_api_gateway_resource.API-resource-book.id http_method = aws_api_gateway_method.GET_one_method.http_method type = \u0026#34;AWS_PROXY\u0026#34; integration_http_method = \u0026#34;POST\u0026#34; uri = aws_lambda_function.book_lambda_function.invoke_arn } resource \u0026#34;aws_api_gateway_method_response\u0026#34; \u0026#34;GET_one_method_response_200\u0026#34; { rest_api_id = aws_api_gateway_rest_api.API-gateway.id resource_id = aws_api_gateway_resource.API-resource-book.id http_method = aws_api_gateway_method.GET_one_method.http_method status_code = \u0026#34;200\u0026#34; response_parameters = { \u0026#34;method.response.header.Access-Control-Allow-Headers\u0026#34; = true, \u0026#34;method.response.header.Access-Control-Allow-Methods\u0026#34; = true, \u0026#34;method.response.header.Access-Control-Allow-Origin\u0026#34; = true, \u0026#34;method.response.header.Access-Control-Allow-Credentials\u0026#34; = true } } resource \u0026#34;aws_api_gateway_integration_response\u0026#34; \u0026#34;GET_one_integration_response_200\u0026#34; { rest_api_id = aws_api_gateway_rest_api.API-gateway.id resource_id = aws_api_gateway_resource.API-resource-book.id http_method = aws_api_gateway_method.GET_one_method.http_method status_code = aws_api_gateway_method_response.GET_one_method_response_200.status_code depends_on = [aws_api_gateway_integration.GET_one_lambda_integration] response_templates = { \u0026#34;application/json\u0026#34; = \u0026lt;\u0026lt;EOF #set($inputRoot = $input.path(\u0026#39;$.body\u0026#39;)) { \\\u0026#34;statusCode\\\u0026#34;: $input.path(\u0026#39;$.statusCode\u0026#39;), \\\u0026#34;body\\\u0026#34;: $inputRoot, \\\u0026#34;headers\\\u0026#34;: { \\\u0026#34;Content-Type\\\u0026#34;: \\\u0026#34;application/json\\\u0026#34; } } EOF } } Mình sẽ tạo các phương thức REST khác tương tự cho CRUD.\nBước 4: Định nghĩa mã hàm Lambda Authorizer Một Lambda Authorizer là một hàm Lambda tùy chỉnh AWS kiểm tra các yêu cầu API và xác định xem chúng có nên được cho phép hay không. Mình đã sử dụng authorizer dựa trên TOKEN. Dưới đây là một triển khai Python của Lambda Authorizer xác thực một token JWT:\nimport jwt import os def lambda_handler(event, context): try: secret_key = os.environ[\u0026#34;JWT_SECRET_KEY\u0026#34;] auth_token = event.get(\u0026#39;authorizationToken\u0026#39;) if not auth_token: print(\u0026#34;Error: No authorization token provided\u0026#34;) return generatePolicy(\u0026#34;user\u0026#34;, \u0026#34;Deny\u0026#34;, event.get(\u0026#34;methodArn\u0026#34;), \u0026#34;Unauthorized: No token provided\u0026#34;) user_details = decode_auth_token(auth_token, secret_key) if user_details.get(\u0026#39;Name\u0026#39;) == \u0026#34;Chinmay\u0026#34; and user_details.get(\u0026#39;Role\u0026#39;) == \u0026#34;api_user\u0026#34;: print(\u0026#39;Authorized JWT Token\u0026#39;) return generatePolicy(\u0026#39;user\u0026#39;, \u0026#39;Allow\u0026#39;, event[\u0026#39;methodArn\u0026#39;], \u0026#34;Authorized : Valid JWT Token\u0026#34;) except jwt.ExpiredSignatureError: print(\u0026#34;Error: Token has expired\u0026#34;) return generatePolicy(\u0026#34;user\u0026#34;, \u0026#34;Deny\u0026#34;, event.get(\u0026#34;methodArn\u0026#34;), \u0026#34;Error: Token has expired\u0026#34;) except jwt.InvalidTokenError: print(\u0026#34;Error: Invalid token\u0026#34;) return generatePolicy(\u0026#34;user\u0026#34;, \u0026#34;Deny\u0026#34;, event.get(\u0026#34;methodArn\u0026#34;), \u0026#34;Error: Invalid JWT Token\u0026#34;) except Exception as e: print(f\u0026#34;Lambda Error: {str(e)}\u0026#34;) # Log exact error return generatePolicy(\u0026#34;user\u0026#34;, \u0026#34;Deny\u0026#34;, event.get(\u0026#34;methodArn\u0026#34;), f\u0026#34;Lambda Error: {str(e)}\u0026#34;) def generatePolicy(principalId, effect, resource, message): authResponse = { \u0026#39;principalId\u0026#39;: principalId, \u0026#39;policyDocument\u0026#39;: { \u0026#39;Version\u0026#39;: \u0026#39;2012-10-17\u0026#39;, \u0026#39;Statement\u0026#39;: [{ \u0026#39;Action\u0026#39;: \u0026#39;execute-api:Invoke\u0026#39;, \u0026#39;Effect\u0026#39;: effect, \u0026#39;Resource\u0026#39;: resource }] }, \u0026#34;context\u0026#34;: { \u0026#34;errorMessage\u0026#34;: message } } return authResponse def decode_auth_token(auth_token: str, secret_key: str): auth_token = auth_token.replace(\u0026#39;Bearer \u0026#39;, \u0026#39;\u0026#39;) return jwt.decode(jwt=auth_token, key=secret_key, algorithms=[\u0026#34;HS256\u0026#34;], options={\u0026#34;verify_signature\u0026#34;: False, \u0026#34;verify_exp\u0026#34;: True}) Để giải mã JWT, mình sẽ sử dụng thư viện PyJWT. Môi trường AWS Lambda không có gói PyJWT theo mặc định. Do đó, mình cần tải lên tất cả các gói cần thiết để hàm lambda_handler có thể chạy trong một tệp zip. Các bước như sau:\nVào thư mục lambda_authorizer tại terminal. Chạy lệnh pip install --target ./ PyJWT Sau đó, cấu trúc thư mục sẽ như sau:\nTiếp theo, mình tạo tệp zip và tạo một hàm Lambda cho authorizer cùng với IAM role:\nresource \u0026#34;aws_iam_role\u0026#34; \u0026#34;lambda_authorizer_role\u0026#34; { name = \u0026#34;lambda_auth_execution_role\u0026#34; assume_role_policy = jsonencode({ \u0026#34;Version\u0026#34; : \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34; : [{ \u0026#34;Effect\u0026#34; : \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34; : { \u0026#34;Service\u0026#34; : \u0026#34;lambda.amazonaws.com\u0026#34; }, \u0026#34;Action\u0026#34; : \u0026#34;sts:AssumeRole\u0026#34; }] }) } resource \u0026#34;aws_iam_policy_attachment\u0026#34; \u0026#34;lambda_basic_execution_authorizer\u0026#34; { name = \u0026#34;lambda_basic_execution_authorizer\u0026#34; roles = [aws_iam_role.lambda_authorizer_role.name] policy_arn = \u0026#34;arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\u0026#34; } data \u0026#34;archive_file\u0026#34; \u0026#34;lambda_authorizer_archive\u0026#34; { type = \u0026#34;zip\u0026#34; source_dir = \u0026#34;${path.module}/lambda_authorizer\u0026#34; output_path = \u0026#34;${path.module}/lambda_authorizer.zip\u0026#34; } resource \u0026#34;aws_lambda_function\u0026#34; \u0026#34;lambda_authorizer\u0026#34; { function_name = \u0026#34;LambdaAuthorizer\u0026#34; filename = \u0026#34;${path.module}/lambda_authorizer.zip\u0026#34; runtime = \u0026#34;python3.12\u0026#34; handler = \u0026#34;lambda_authorizer.lambda_handler\u0026#34; memory_size = 128 timeout = 10 source_code_hash = data.archive_file.lambda_authorizer_archive.output_base64sha256 role = aws_iam_role.lambda_authorizer_role.arn environment { variables = { JWT_SECRET_KEY = \u0026#34;secret_api_tutorial\u0026#34; } } } resource \u0026#34;aws_cloudwatch_log_group\u0026#34; \u0026#34;book_lambda_authorizer_cloudwatch\u0026#34; { name = \u0026#34;/aws/lambda/${aws_lambda_function.lambda_authorizer.function_name}\u0026#34; retention_in_days = 7 } Các điểm chính về Lambda Authorizers Authorizers phải trả về một chính sách IAM: Lambda Authorizers không trả về phản hồi HTTP; thay vào đó, chúng tạo ra một chính sách IAM xác định liệu quyền truy cập có được cho phép hay không. Xử lý các yêu cầu bị từ chối: Nếu phản hồi bao gồm một \u0026ldquo;Deny\u0026rdquo; rõ ràng, AWS API Gateway sẽ trả về một thông điệp lỗi 403 tổng quát. Để tùy chỉnh điều này, bạn có thể thử nghiệm với việc trả về một chính sách \u0026ldquo;Allow\u0026rdquo; mà không có hành động hoặc tài nguyên nào, nhưng điều này không được khuyến nghị. Mình đã tạo 3 nhóm log CloudWatch, giúp mình quét các log khi cần thiết:\nCho hàm Lambda thực hiện các thao tác CRUD. Cho Lambda Authorizer. Các cuộc gọi API gateway. Các bước để chạy Terraform Thực hiện các bước sau để thực thi cấu hình Terraform:\ntf init tf plan tf apply -auto-approve Sau khi hoàn thành, Terraform sẽ cung cấp các đầu ra liên quan.\nApply complete! Resources: 46 added, 0 changed, 0 destroyed. Kiểm tra Hàm Lambda và hàm Lambda Authorizer:\nTài nguyên API với Authorizer đã được định nghĩa:\nToken Dựa trên authorizer cho API với nguồn token là authorizationToken:\nXây dựng JWT bằng công cụ xây dựng JWT trực tuyến sử dụng khóa bí mật:\nKiểm tra trực tuyến xem JWT có hợp lệ hay không bằng khóa bí mật đã cung cấp ở trên:\nKiểm tra token hợp lệ (mình đã gửi token JWT dưới dạng tiêu đề authorizationToken):\nNhật ký thực thi API Gateway cho thấy tiêu đề yêu cầu với phản hồi của authorizer cùng với chính sách IAM với Allow. Nhật ký hàm Lambda sách và hàm Authorizer cũng sẽ cho thấy thành công.\nKiểm tra token không hợp lệ (mình đã gửi token JWT không hợp lệ dưới dạng tiêu đề authorizationToken):\nNhật ký thực thi API Gateway cho thấy tiêu đề yêu cầu với phản hồi của authorizer cùng với chính sách IAM với Deny. Nhật ký hàm Authorizer cũng sẽ cho thấy thất bại, hàm sách Lambda sẽ không được gọi.\nCác kiểm tra tương tự có thể được thực hiện cho các token đã hết hạn!\nDọn dẹp Nhớ dừng các thành phần AWS để tránh hóa đơn lớn.\ntf destroy -auto-approve Kết luận Bằng cách tích hợp một Lambda Authorizer với xác thực dựa trên JWT và triển khai nó bằng Terraform, mình có thể thực thi quyền kiểm soát truy cập trên các endpoint của API Gateway, đảm bảo chỉ những người dùng được ủy quyền mới có thể truy cập API. Phương pháp này linh hoạt và cho phép nhiều cơ chế xác thực khác nhau, bao gồm các nhà cung cấp danh tính bên thứ ba.\nTài liệu tham khảo GitHub Repo: https://github.com/chinmayto/terraform-aws-api-gateway-lambda-authorizer API Gateway Lambda Authorizer: https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html JWT Tokens: https://jwt.io/ Online JWT Builder: http://jwtbuilder.jamiekurtz.com/ "},{"section":"Blog","slug":"/web-development/linux/huong-dan-cai-dat-virtual-host-va-mysql-cho-phat-trien-wordpress-tren-linux/","title":"Hướng dẫn cài đặt Virtual Host và MySQL cho phát triển WordPress trên Linux","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, PHP, WordPress, Linux","tags":"WordPress, Linux, Lập trình","content":"Các bước cài đặt Virtual Host và MySQL cho phát triển WordPress trên Linux 1. Cài đặt phần mềm cần thiết Cập nhật hệ thống: sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Cài đặt Apache, MySQL và PHP: sudo apt install apache2 mysql-server php libapache2-mod-php php-mysql 2. Thiết lập cơ sở dữ liệu MySQL Bảo mật cài đặt MySQL: sudo mysql_secure_installation Đặt mật khẩu root (nếu có yêu cầu). Trả lời Y (có) cho tất cả các câu hỏi về bảo mật. Đăng nhập vào MySQL: sudo mysql -u root -p Tạo một cơ sở dữ liệu cho WordPress: CREATE DATABASE wordpress_db; Tạo người dùng MySQL và cấp quyền: CREATE USER \u0026#39;wordpress_user\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;your_password\u0026#39;; GRANT ALL PRIVILEGES ON wordpress_db.* TO \u0026#39;wordpress_user\u0026#39;@\u0026#39;localhost\u0026#39;; FLUSH PRIVILEGES; EXIT; 3. Cấu hình Virtual Host Tạo thư mục cho trang WordPress của bạn: sudo mkdir -p /var/www/yourdomain.com Thiết lập quyền hạn: sudo chown -R $USER:$USER /var/www/yourdomain.com Tạo tệp cấu hình Virtual Host: sudo nano /etc/apache2/sites-available/yourdomain.com.conf Thêm nội dung sau: \u0026lt;VirtualHost *:80\u0026gt; ServerName yourdomain.com DocumentRoot /var/www/yourdomain.com \u0026lt;Directory /var/www/yourdomain.com\u0026gt; AllowOverride All \u0026lt;/Directory\u0026gt; ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; Kích hoạt trang và tải lại Apache: sudo a2ensite yourdomain.com.conf sudo systemctl reload apache2 4. Cài đặt WordPress Tải WordPress: cd /tmp \u0026amp;\u0026amp; wget https://wordpress.org/latest.tar.gz Giải nén WordPress vào thư mục trang của bạn: sudo tar -xvzf latest.tar.gz -C /var/www/yourdomain.com --strip-components=1 Thiết lập quyền hạn: sudo chown -R www-data:www-data /var/www/yourdomain.com 5. Cấu hình WordPress Mở trình duyệt và truy cập http://yourdomain.com. Theo dõi trình hướng dẫn cài đặt WordPress: Tên cơ sở dữ liệu: wordpress_db Tên người dùng: wordpress_user Mật khẩu: your_password Máy chủ cơ sở dữ liệu: localhost Tiền tố bảng: wp_ (mặc định) Hoàn tất cài đặt. 6. Kiểm tra cài đặt của bạn Truy cập http://yourdomain.com để xem trang WordPress của bạn. Đăng nhập vào bảng điều khiển quản trị WordPress tại http://yourdomain.com/wp-admin. Tùy chọn: Thiết lập tên miền cục bộ Nếu bạn đang làm việc cục bộ, hãy chỉnh sửa tệp /etc/hosts để ánh xạ yourdomain.com tới 127.0.0.1:\nMở tệp hosts: sudo nano /etc/hosts Thêm dòng này: 127.0.0.1 yourdomain.com Lưu và thoát. Tóm tắt Đã cài đặt Apache, MySQL và PHP trên Linux. Đã tạo cơ sở dữ liệu và người dùng MySQL. Đã thiết lập Virtual Host cho tên miền của bạn. Đã cài đặt và cấu hình WordPress. Mình hy vọng các bạn sẽ có một trải nghiệm phát triển WordPress tuyệt vời trên Linux! 🚀\n"},{"section":"Blog","slug":"/tin-cong-nghe/huong-dan-chon-mua-apple-watch-moi-nhat-series-10-9-va-se/","title":"Hướng dẫn chọn mua Apple Watch mới nhất: Series 10, 9 và SE","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Apple Watch, Smartwatch, Công nghệ","content":"Giới thiệu Vào tháng 9, Apple đã ra mắt chiếc smartwatch mới nhất của mình, giới thiệu Apple Watch Series 10 cùng với một phiên bản màu đen của Apple Watch Ultra 2. Mỗi chiếc đồng hồ thông minh đều có những ưu và nhược điểm riêng, cũng như Apple Watch SE thế hệ thứ hai. Tuy nhiên, sự xuất hiện của các mẫu đồng hồ mới cũng đồng nghĩa với việc có nhiều lựa chọn hơn trên thị trường.\nNhưng với tất cả những lựa chọn đó, bạn nên chọn mẫu nào? Mình khuyên bạn nên mua chiếc đồng hồ mới nhất mà bạn có thể chi trả để đảm bảo rằng nó sẽ nhận được các bản cập nhật phần mềm từ Apple trong tương lai. Bản cập nhật mới nhất, watchOS 11, đã ra mắt vào tháng 9 trên các mẫu Apple Watch Series 6 và mới hơn, khiến những người vẫn đang sử dụng Series 4 hoặc Series 5 cảm thấy bị bỏ lại.\nMua một chiếc đồng hồ từ thế hệ mới nhất (hoặc gần đây) đảm bảo rằng bạn đang sở hữu một smartwatch với thiết kế cập nhật, nhiều tính năng và cảm biến phong phú.\nCác mẫu Apple Watch và ưu đãi Apple Watch Series 10 Giá: $300\nMô tả: Apple Watch Series 10 có màn hình OLED rộng hơn, với diện tích màn hình lớn hơn đến 30%. Nó cũng mỏng và nhẹ hơn so với các phiên bản trước.\nĐặc điểm nổi bật: S10 SiP chip mới, sạc nhanh hơn, màn hình OLED rộng hơn, sáng hơn, dễ đọc hơn so với các mẫu trước đó. Nó cũng nhẹ bằng một nửa so với Ultra và mỏng hơn khoảng 30%. Các nâng cấp khác bao gồm cảm biến độ sâu và nhiệt độ nước, cũng như tính năng phát hiện ngưng thở khi ngủ đã được FDA phê duyệt.\nApple Watch Series 9 Giá: $280\nMô tả: Apple Watch Series 9 là một nâng cấp nhẹ so với Series 8. Nó sử dụng chip S9 SiP và chip băng tần siêu rộng thế hệ thứ hai.\nChi tiết: Mặc dù đã ra mắt hơn một năm, một số cấu hình đã trở nên khó tìm do sự xuất hiện của mẫu mới nhất. Tuy nhiên, Series 9 GPS vẫn có mặt tại Amazon với giá khởi điểm $279.99 ($120 giảm giá).\nApple Watch SE Giá: $199\nMô tả: Mẫu SE mới nhất đã được làm mới vào cuối năm 2022, sử dụng cùng chipset với Series 8 và có tính năng phát hiện va chạm.\nLưu ý: Mặc dù nó có ít cảm biến hơn, không có màn hình luôn bật và thiết kế có phần lỗi thời so với Series 8, Series 9 và Series 10, nhưng nó vẫn có thể là lựa chọn phù hợp cho một số người. Mẫu 40mm Wi-Fi / GPS bắt đầu từ $249.\nApple Watch Ultra 2 Giá: $735\nMô tả: Apple Watch Ultra 2 có kích thước 49mm, với màn hình sáng nhất trong dòng sản phẩm của Apple, thời lượng pin tốt hơn và hiệu suất cải thiện.\nChi tiết: Mẫu này cũng sử dụng chip S9 và có rất nhiều cảm biến và tính năng cho những người yêu thích hoạt động ngoài trời.\nLưu ý về các mẫu cao cấp hơn Tất cả các mẫu Apple Watch được đề cập đều được làm bằng nhôm (trừ Ultra 2, được làm bằng titan). Apple cũng có một dòng sản phẩm cao cấp hơn được làm bằng thép không gỉ và titan, nhưng giá khởi điểm của chúng thường cao hơn $699 và không bao giờ giảm giá thấp như các mẫu cơ bản.\n"},{"section":"Blog","slug":"/web-development/git/huong-dan-su-dung-git-de-an-va-hien-cac-thay-doi-khong-can-thiet/","title":"Hướng dẫn sử dụng Git để ẩn và hiện các thay đổi không cần thiết","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Git, Web development","tags":"Git, Lập trình, Quản lý mã nguồn","content":"Giới thiệu Chắc hẳn có nhiều lúc mình gặp phải tình huống khi gõ mã, có thay đổi ở 10 tệp nhưng chỉ cần commit một tệp duy nhất, trong khi các tệp khác lại là các tệp cấu hình hoặc thậm chí chỉ riêng cho máy của mình. Những thay đổi này không cần phải đưa vào source control.\nMình đã từng gặp tình huống tương tự khi làm việc trên máy Windows trong khi đồng nghiệp của mình sử dụng Mac. Họ có những cấu hình như npm-scripts, linting configuration, dockerfiles chỉ dành riêng cho Mac. Những thay đổi này không cần phải push lên source control. Sau khi tìm hiểu, mình phát hiện ra rằng update-index trong Git có thể giúp giải quyết vấn đề này.\nGiải pháp Trong Git, có khái niệm về index, có thể hiểu đơn giản là một snapshot của repository mà Git theo dõi. Bất kỳ lệnh nào như status, add\u0026hellip; đều sử dụng index này để thực hiện các thao tác. Chúng ta cần cập nhật index này để các thay đổi không xuất hiện trong trạng thái git. Lệnh update-index giúp mình làm điều này.\ngit update-index --assume-unchanged file.txt Mọi thứ đều tốt, nhưng nếu mình muốn commit các thay đổi trong tệp đó thì sao? Chúng ta chỉ cần sử dụng lệnh sau:\ngit update-index --no-assume-unchanged file.txt Điều này sẽ đảm bảo rằng tệp này được Git theo dõi.\nNếu bạn muốn xem các tệp ẩn, hãy sử dụng lệnh sau:\ngit ls-files -v | grep \u0026#39;^h\u0026#39; | cut -c3- Thêm các lệnh dưới dạng alias Mình có thể cấu hình các lệnh này dưới dạng alias để sử dụng dễ dàng hơn:\ngit config --global alias.hide \u0026#39;update-index --assume-unchanged\u0026#39; git config --global alias.unhide \u0026#39;update-index --no-assume-unchanged\u0026#39; git config --global alias.hidden \u0026#39;! git ls-files -v | grep \u0026#39;^h\u0026#39; | cut -c3- Cách sử dụng Thay vì phải gõ lệnh dài git update-index --assume-unchanged file.txt, mình có thể sử dụng alias như sau:\ngit hide file.txt # tương đương với git update-index --assume-unchanged file.txt git unhide file.txt # tương đương với git update-index --no-assume-unchanged file.txt git hidden # tương đương với git ls-files -v | grep \u0026#39;^h\u0026#39; | cut -c3- Lưu ý Best Practices: Hãy cẩn thận khi sử dụng lệnh này để không vô tình ẩn các thay đổi quan trọng mà bạn cần theo dõi. Thực hành: Hãy thử nghiệm với các tệp không quan trọng trước khi áp dụng lên các tệp quan trọng trong dự án của bạn. "},{"section":"Blog","slug":"/web-development/linux/huong-dan-thay-doi-muc-mac-dinh-trong-grub-menu/","title":"Hướng dẫn thay đổi mục mặc định trong GRUB Menu","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Linux, Hệ điều hành","tags":"GRUB, Linux, Hệ điều hành","content":"Hướng dẫn thay đổi mục mặc định trong GRUB Menu Mình sẽ chia sẻ với các bạn cách để thay đổi mục mặc định trong GRUB menu. Theo mặc định, mục đầu tiên sẽ được chọn sau khi thời gian GRUB_TIMEOUT trôi qua. Để thay đổi lựa chọn mặc định này, chúng ta cần chỉnh sửa thuộc tính GRUB_DEFAULT trong tệp /etc/default/grub.\nCác bước thực hiện Tất cả các mục trong menu GRUB đều được đánh số bắt đầu từ 0. Ví dụ, nếu menu của chúng ta trông như sau:\n1. Ubuntu 2. Advanced options for Ubuntu 3. Memory test (memtest86+64.efi) 4. Memory test (memtest86+64.efi, serial console) 5. UEFI Firmware Settings 6. Windows 10 Nếu mình muốn thiết lập mục Windows 10 làm mục mặc định, mình cần đặt giá trị là 5.\nChỉnh sửa tệp cấu hình Mở tệp cấu hình bằng lệnh sau:\nsudo vi /etc/default/grub Sau đó, tìm dòng có chứa GRUB_DEFAULT và chỉnh sửa như sau:\nGRUB_DEFAULT=5 Áp dụng thay đổi Sau khi đã thực hiện tất cả các thay đổi, bạn cần áp dụng chúng bằng cách chạy lệnh sau:\nsudo update-grub Lưu ý Hãy chắc chắn rằng bạn thực hiện các thao tác này với quyền sudo để có thể chỉnh sửa tệp cấu hình. Kiểm tra lại các mục trong GRUB menu để đảm bảo số thứ tự bạn đã nhập là chính xác. Nếu có bất kỳ lỗi nào xảy ra sau khi khởi động lại, bạn có thể khôi phục lại cấu hình ban đầu. Hy vọng với hướng dẫn này, các bạn sẽ dễ dàng thiết lập mục khởi động theo ý muốn của mình!\n"},{"section":"Blog","slug":"/web-development/security/huong-dan-thiet-lap-lab-tai-nha-cho-siem-su-dung-elastic-cloud/","title":"Hướng dẫn thiết lập lab tại nhà cho SIEM sử dụng Elastic Cloud","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, Security","tags":"SIEM, Elastic Cloud, Kali Linux","content":"Giới thiệu Chào các bạn, hôm nay mình sẽ hướng dẫn các bạn cách thiết lập một lab tại nhà cho SIEM bằng Elastic Cloud. Mình sẽ giải thích từng bước để tạo ra một môi trường SIEM chức năng với Elastic Cloud và một máy ảo Kali Linux. Dự án này đã giúp mình khám phá hành trình an ninh mạng với kiến thức thực tiễn về SIEM.\nCác yêu cầu trước khi bắt đầu Trước khi bắt đầu dự án, mình cần chuẩn bị những điều sau:\nPhần mềm ảo hóa như VirtualBox Tài khoản Elastic Cloud (Có bản dùng thử miễn phí trong 14 ngày) Kiến thức cơ bản về Linux và các khái niệm ảo hóa Các bước thực hiện Dưới đây là các bước mình đã thực hiện, kèm theo mô tả:\n1. Tạo tài khoản Elastic Trước tiên, mình sẽ hướng dẫn bạn cách tạo tài khoản Elastic miễn phí:\nNếu bạn chưa có tài khoản, hãy đăng ký tại Elastic Cloud Registration. Sau đó, đăng nhập vào tài khoản của bạn. Sau khi đăng nhập, nhấn nút Create Deployment và chọn Elasticsearch làm loại triển khai. Chọn khu vực và kích thước triển khai phù hợp với yêu cầu của dự án, sau đó nhấn Create Deployment. Sau một thời gian, cấu hình sẽ được hoàn tất. Nhấn Continue để tiếp tục. Như vậy, mình đã gần hoàn thành bước đầu tiên của dự án.\n2. Thiết lập máy ảo Linux Thiết lập máy ảo Kali Linux theo hướng dẫn chính thức tại: Kali Virtualization Guide.\n3. Thiết lập Agent để thu thập log từ VM Bây giờ hãy cùng mình đi vào phần thực hành. Để giám sát hiệu quả các sự kiện an ninh trên máy ảo Kali, mình cần gửi log từ Kali VM đến instance Elastic. Để làm điều này, mình đã thiết lập một agent. Agent có vai trò thu thập và truyền tải dữ liệu từ các thiết bị đến Elastic Cloud để phân tích và giám sát.\nCác bước thiết lập Agent Mình đã đăng nhập vào instance SIEM Elastic và điều hướng đến trang Integrations bằng cách nhấn nút Add Integration ở dưới cùng của thanh bên:\nSau đó, mình chọn Elastic Defend làm tích hợp:\nTiếp theo, mình nhấn nút Add Elastic Defend ở góc trên bên phải màn hình:\nSau đó, mình nhấn Install Elastic Agent và chọn Linux Tar, rồi sao chép lệnh được cung cấp:\nSau đó, mình mở máy ảo Kali, dán lệnh vào terminal và nhấn Enter. Mất vài phút để cài đặt Elastic Agent. Bây giờ, agent tự động bắt đầu thu thập và chuyển tiếp log đến instance SIEM Elastic của mình.\n4. Truy vấn sự kiện an ninh trong Elastic SIEM Sau khi thành công trong việc chuyển tiếp dữ liệu từ Kali VM đến instance SIEM, giờ là lúc mình phân tích log bằng giao diện SIEM. Mình đã thực hiện các bước sau:\nTruy cập vào triển khai Elastic: Điều hướng đến triển khai Elastic và tìm kiếm logs trong menu. Điều này giúp mình truy cập các log từ máy ảo Kali. Tìm kiếm sự kiện an ninh Nhập truy vấn tìm kiếm: Mình đã sử dụng thanh tìm kiếm để lọc log theo các tiêu chí khác nhau. Ví dụ, để tách các log liên quan đến quét Nmap, mình đã sử dụng truy vấn: event.action:\u0026#34;nmap\u0026#34; Thực hiện tìm kiếm: Sau khi viết truy vấn, mình nhấn Enter, và sau một thời gian ngắn, nó hiển thị danh sách các log liên quan đến lệnh Nmap. Xem kết quả tìm kiếm: Kết quả được trình bày theo định dạng có cấu trúc, cho phép mình xem xét từng sự kiện bằng cách nhấp vào ba dấu chấm bên cạnh mỗi sự kiện. Điều này giúp mình kiểm tra chi tiết log một cách kỹ lưỡng hơn. Bằng cách tạo ra và phân tích các loại sự kiện an ninh khác nhau trong Elastic SIEM, mình có thể hiểu sâu hơn về cách các sự cố an ninh được xác định, điều tra và xử lý trong môi trường thực tế.\n5. Tạo bảng điều khiển để trực quan hóa sự kiện Sau khi phân tích các log, mình có thể trực quan hóa chúng bằng bảng điều khiển SIEM. Mình đã tạo một bảng điều khiển mới để theo dõi số lượng sự kiện an ninh mỗi giây theo thời gian. Điều này mang lại cái nhìn giá trị về tình trạng an ninh của mạng lưới của mình.\n6. Tạo cảnh báo Trong môi trường SIEM, cảnh báo rất quan trọng để phát hiện các mối đe dọa an ninh và phản ứng nhanh chóng. Bằng cách cấu hình cảnh báo dựa trên các quy tắc đã định nghĩa hoặc tùy chỉnh, mình có thể theo dõi các hoạt động đáng ngờ và thực hiện các hành động cần thiết. Hướng dẫn này sẽ chỉ bạn cách tạo cảnh báo trong Elastic SIEM để phát hiện các quét Nmap, đảm bảo giám sát log chủ động và thông báo kịp thời.\nMình đã bắt đầu bằng cách nhấn \u0026ldquo;Manage Rules\u0026rdquo; trong giao diện cảnh báo. Sau đó, mình đã tạo một quy tắc mới bằng cách chọn \u0026ldquo;Create New Rule\u0026rdquo;. Trong phần \u0026ldquo;Define Rule\u0026rdquo;, mình đã chọn \u0026ldquo;Custom Query\u0026rdquo; và thiết lập các điều kiện để phát hiện sự kiện quét Nmap.\nTiếp theo, mình đã đặt tên cho quy tắc là \u0026ldquo;Nmap Scan Detection\u0026rdquo;, thêm mô tả và đặt mức độ nghiêm trọng. Sau đó, mình chọn hành động phù hợp, chẳng hạn như gửi email, tin nhắn Slack hoặc thông báo webhook. Cuối cùng, mình nhấn \u0026ldquo;Create and Enable Rule\u0026rdquo; để kích hoạt cảnh báo.\nBây giờ, quy tắc sẽ liên tục giám sát các log để phát hiện sự kiện quét Nmap. Nếu phát hiện, nó sẽ kích hoạt hành động đã cấu hình.\nKết luận Việc thiết lập lab tại nhà này sử dụng Elastic SIEM và Kali VM đã là một trải nghiệm học tập tuyệt vời. Mình đã thành công trong việc cấu hình chuyển tiếp log, phân tích các sự kiện an ninh, tạo bảng điều khiển và thiết lập cảnh báo cho các mối đe dọa tiềm ẩn. Dự án này đã củng cố kỹ năng của mình trong việc giám sát an ninh và phản ứng sự cố, mang lại cho mình kinh nghiệm thực tiễn với các công cụ SIEM. Mình rất mong muốn tiếp tục nâng cao kiến thức và khám phá các kỹ thuật phân tích an ninh nâng cao hơn.\n"},{"section":"Blog","slug":"/web-development/linux/huong-dan-thiet-lap-virtual-host-va-mysql-cho-phat-trien-wordpress-tren-linux/","title":"Hướng dẫn thiết lập Virtual Host và MySQL cho phát triển WordPress trên Linux","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, Tin công nghệ","tags":"WordPress, Linux, Lập trình","content":"Bước 1: Cài đặt phần mềm cần thiết Cập nhật hệ thống:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Cài đặt Apache, MySQL và PHP:\nsudo apt install apache2 mysql-server php libapache2-mod-php php-mysql Bước 2: Thiết lập cơ sở dữ liệu MySQL Bảo mật cài đặt MySQL:\nsudo mysql_secure_installation Đặt mật khẩu cho tài khoản root (nếu được yêu cầu). Trả lời Y (có) cho tất cả các câu hỏi bảo mật. Đăng nhập vào MySQL:\nsudo mysql -u root -p Tạo cơ sở dữ liệu cho WordPress:\nCREATE DATABASE wordpress_db; Tạo người dùng MySQL và cấp quyền:\nCREATE USER \u0026#39;wordpress_user\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;your_password\u0026#39;; GRANT ALL PRIVILEGES ON wordpress_db.* TO \u0026#39;wordpress_user\u0026#39;@\u0026#39;localhost\u0026#39;; FLUSH PRIVILEGES; EXIT; Bước 3: Cấu hình Virtual Host Tạo thư mục cho trang WordPress của bạn:\nsudo mkdir -p /var/www/yourdomain.com Thiết lập quyền truy cập:\nsudo chown -R $USER:$USER /var/www/yourdomain.com Tạo tệp cấu hình virtual host:\nsudo nano /etc/apache2/sites-available/yourdomain.com.conf Thêm nội dung sau:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName yourdomain.com DocumentRoot /var/www/yourdomain.com \u0026lt;Directory /var/www/yourdomain.com\u0026gt; AllowOverride All \u0026lt;/Directory\u0026gt; ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; Kích hoạt trang và tải lại Apache:\nsudo a2ensite yourdomain.com.conf sudo systemctl reload apache2 Bước 4: Cài đặt WordPress Tải WordPress:\ncd /tmp \u0026amp;\u0026amp; wget https://wordpress.org/latest.tar.gz Giải nén WordPress vào thư mục trang của bạn:\nsudo tar -xvzf latest.tar.gz -C /var/www/yourdomain.com --strip-components=1 Thiết lập quyền truy cập:\nsudo chown -R www-data:www-data /var/www/yourdomain.com Bước 5: Cấu hình WordPress Mở trình duyệt và truy cập http://yourdomain.com. Thực hiện theo hướng dẫn cài đặt WordPress: Tên cơ sở dữ liệu: wordpress_db Tên người dùng: wordpress_user Mật khẩu: your_password Máy chủ cơ sở dữ liệu: localhost Tiền tố bảng: wp_ (mặc định) Hoàn tất quá trình cài đặt. Bước 6: Kiểm tra thiết lập của bạn Truy cập http://yourdomain.com để xem trang WordPress của bạn. Đăng nhập vào bảng điều khiển quản trị WordPress tại http://yourdomain.com/wp-admin. Tùy chọn: Thiết lập miền cục bộ Nếu bạn đang làm việc cục bộ, hãy chỉnh sửa tệp /etc/hosts để ánh xạ yourdomain.com tới 127.0.0.1:\nMở tệp hosts:\nsudo nano /etc/hosts Thêm dòng này:\n127.0.0.1 yourdomain.com Lưu và thoát.\nTóm tắt Đã cài đặt Apache, MySQL và PHP trên Linux. Tạo cơ sở dữ liệu và người dùng MySQL. Thiết lập virtual host cho miền của bạn. Cài đặt và cấu hình WordPress. Bạn đã sẵn sàng cho phát triển WordPress trên Linux! 🚀\n"},{"section":"Blog","slug":"/web-development/php/huong-dan-thiet-lap-wamp-stack-voi-nhieu-phien-ban-php-tren-windows/","title":"Hướng dẫn thiết lập WAMP stack với nhiều phiên bản PHP trên Windows","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, PHP","tags":"PHP, WAMP, Lập trình","content":"Giới thiệu Mình đã từng thắc mắc rằng làm thế nào để gỡ bỏ WampServer, Xampp, EasyPHP và các công cụ tương tự? Trong bài viết này, mình sẽ hướng dẫn các bạn:\nCách thiết lập PHP, MySQL/MariaDB và Apache trên máy phát triển Windows (WAMP stack) Cách chạy nhiều phiên bản PHP trên máy phát triển mà không cần chuyển đổi liên tục Cách thiết lập vhosts và batch scripts để thực hiện điều đó một cách hiệu quả 💡 Bài viết này dành cho các lập trình viên PHP trung cấp hoặc những ai đang tìm kiếm cấu hình này. Đừng lo lắng nếu các phiên bản PHP khác nhau không có ý nghĩa với bạn, hoặc bạn không chắc chắn về khái niệm server, hãy bookmark bài viết này và quay lại sau.\nTrong những năm đầu lập trình, mình đã sử dụng nhiều công cụ như WampServer, XAMPP hay EasyPHP cho phát triển PHP. Mình nhanh chóng nhận ra rằng các công cụ này có một nhược điểm chung: Chu kỳ phát hành chậm và tính linh hoạt hạn chế.\nChúng cho phép mình chuyển đổi phiên bản PHP, nhưng không cho phép chạy nhiều phiên bản PHP cùng lúc, vì vậy mình phải liên tục chuyển đổi phiên bản khi làm việc trên các dự án khác nhau.\nWAMP stack WAMP stack bao gồm 3 thành phần chính mà mình cần cài đặt và cấu hình:\nApache server (sử dụng vhosts) MySQL / MariaDB database PHP Lưu ý rằng W đứng cho Windows, nên nó được gọi là \u0026ldquo;WAMP\u0026rdquo;.\nMình có thể cài đặt nhiều phiên bản PHP trên một máy phát triển Windows. Một phiên bản MySQL hoặc MariaDB là tất cả những gì mình cần, nhưng nếu cần, mình có thể chạy các phiên bản khác nhau trên các cổng khác nhau.\nThiết lập \u0026amp; Cài đặt Mình thích tạo một thư mục dành riêng cho các công cụ phát triển của mình, chẳng hạn như C:\\dev. Mình sẽ gọi đây là \u0026ldquo;thư mục cài đặt\u0026rdquo;. Sau đó, mình giữ các dự án trong một thư mục riêng, gọi là C:\\projects hoặc \u0026ldquo;thư mục dự án\u0026rdquo;.\nTrên thực tế, mình giữ các dự án trên một ổ đĩa mã hóa riêng biệt, nhưng điều đó không nằm trong phạm vi của bài viết này.\nHãy chọn phiên bản x64 của phần mềm nếu máy của bạn là x64 (thực tế là trường hợp phổ biến). Đừng kết hợp x64 với x32 vì một số kết hợp có thể không hoạt động.\nMẹo để sử dụng nhiều phiên bản nằm ở hai phần:\nCấu hình vhosts cho từng dự án (chỉ định directive FCGIWrapper với phiên bản PHP của bạn) Thiết lập các lệnh batch alias (.bat) để gọi các executable PHP (và composer) khác nhau, ví dụ: php84, php82, php74, composer@84, v.v. PHP Tải về PHP Windows binaries mà bạn chọn. Hãy chọn phiên bản mới nhất, nếu có thể.\nCó hai loại build mà bạn sẽ thấy: Thread safe (còn gọi là TS hoặc ZTS) và Non thread safe (còn gọi là NTS). Mình sẽ sử dụng phiên bản NTS vì nó hoạt động tốt hơn.\n💡 Lưu ý rằng với một thiết lập Apache + PHP \u0026ldquo;typical\u0026rdquo; với mod_php, như trong XAMPP, bạn sẽ phải chọn phiên bản thread safe (ZTS) để tránh các vấn đề về đồng thời.\nGiải nén nội dung vào thư mục cài đặt của bạn, đảm bảo tạo một thư mục con cho mỗi phiên bản PHP chính, như php84, php82, php74\u0026hellip; Để đảm bảo nhiều phiên bản có thể tồn tại bên cạnh nhau.\nĐường dẫn tới PHP của bạn sẽ trông giống như sau C:\\dev\\php\\php84.\nĐể cấu hình PHP, hãy tìm tệp php.ini. Nếu không có, hãy tìm php.ini-development, sao chép nó và đổi tên thành php.ini.\nMình sẽ để việc cấu hình thực tế cho bạn. Nhưng mình khuyên bạn nên điều chỉnh các giá trị mà bạn thấy không phù hợp sau này.\nBạn có thể thử nghiệm hoặc xác minh cấu hình bằng cách gọi php -v để xem phiên bản, php -m để xem các mô-đun đã cài đặt hoặc php -i để xem tất cả các cấu hình, điều này khá chi tiết. Hãy chú ý đến bất kỳ thông báo lỗi/cảnh báo nào được PHP in ra.\nĐể thử nghiệm giao diện web, hãy tạo một tệp đơn giản info.php và đặt lệnh gọi phpinfo ở đó.\n\u0026lt;?php phpinfo(); Sau đó, truy cập nó trên trình duyệt thông qua miền cụ thể (xem vhosts bên dưới). Bạn sẽ thấy một giao diện như thế này:\nHTTPS (curl, OpenSSL) Để có thể thực hiện các yêu cầu HTTPS từ PHP một cách chính xác, hãy truy cập CA certificates extracted from Mozilla và tải về tệp cacert.pem. Đặt nó vào thư mục cài đặt của bạn.\nHãy chắc chắn bao gồm nó trong tệp php.ini của bạn (cập nhật các giá trị hiện có):\n[curl] curl.cainfo = \u0026#34;C:/dev/cacert.pem\u0026#34; [openssl] openssl.cafile= \u0026#34;C:/dev/cacert.pem\u0026#34; Xdebug Truy cập Xdebug downloads và chọn phiên bản phù hợp. Hãy đảm bảo chọn phiên bản PHP đúng + x64 + biến thể NTS.\nGiải nén tệp zip - bạn chỉ cần tệp php_xdebug-3.4xxxxx.dll. Đặt dll vào thư mục ext của PHP.\nBao gồm hoặc sửa đổi phần Xdebug trong tệp php.ini.\n✋ Hãy cẩn thận ở đây khi chỉ định zend_extension không có tiền tố php_ và hậu tố .dll, nếu không mô-đun sẽ không được tải. Giá trị thực tế ở đây phụ thuộc vào tên tệp mà bạn đặt trong thư mục ext.\n[Xdebug] zend_extension=xdebug-3.4.1-8.4-nts-vs17-x86_64 ; Debug enables step debugging, develop has better performance. ; https://xdebug.org/docs/all_settings#mode xdebug.mode=debug Bạn có thể đổi tên tệp thành php_xdebug.dll và sử dụng zend_extension=xdebug trong tệp ini, nhưng mình khuyên bạn nên giữ nguyên tên tệp gốc. Nếu bạn quyết định đổi tên, bạn phải giữ tiền tố php_ trong tên tệp hoặc mô-đun sẽ không được tải.\nKhi đã cấu hình đúng, gõ php -v trong terminal sẽ xác nhận cấu hình chính xác với Xdebug. Nếu có bất kỳ vấn đề gì, PHP sẽ in chúng ra.\nCập nhật Để cập nhật một phiên bản PHP, chỉ cần tải về phiên bản mới và ghi đè nội dung thư mục cài đặt. Điều này sẽ giữ lại bất kỳ mở rộng nào bạn đã thêm (như Xdebug) cũng như tệp cấu hình (php.ini) không bị thay đổi.\nApache server Apache web server là phần mềm lắng nghe các yêu cầu HTTP từ khách hàng (tức là trình duyệt), xử lý các yêu cầu này bằng cách gọi dịch vụ trình thông dịch PHP và gửi phản hồi kết quả về cho người dùng.\nMình sẽ sử dụng module có tên FastCGI (mod_fcgid) với các phiên bản PHP NTS.\nTruy cập Apache Lounge download page và\nTải về Apache 2.4 x64 Tải về module FastCGI (mod_fcgid) Giải nén nội dung vào thư mục cài đặt của bạn, ví dụ: C:\\dev\\Apache24, và đặt mod_fcgid vào thư mục \\modules, ví dụ: C:\\dev\\Apache24\\modules.\nHãy chắc chắn kích hoạt module trong httpd.conf nằm trong C:\\dev\\Apache24\\conf:\nLoadModule fcgid_module modules/mod_fcgid.so Mình thường tách cấu hình Apache theo từng dự án vào một vài tệp cấu hình nằm trong thư mục dự án, có thể được bao gồm từ httpd.conf bằng một dòng như thế này (đặt ở cuối):\nIncludeOptional \u0026#34;R:\\httpd-include.conf\u0026#34; Đây là cấu hình DEV hiện tại của mình, bạn có thể điều chỉnh cho phù hợp hoặc không bao gồm nó để sử dụng mặc định. Mình đã sử dụng cấu hình này khi thử nghiệm với SSE (server-sent events), nhưng sau đó mình đã quên mất. Có thể nó là một sự thừa thãi.\n\u0026lt;IfModule fcgid_module\u0026gt; FcgidIOTimeout 600 FcgidConnectTimeout 16 FcgidBusyTimeout 600 FcgidMaxRequestsPerProcess 500 FcgidMaxProcesses 50 # 4G = 4294967296 FcgidMaxRequestLen 4294967296 # cho các thử nghiệm với SSE / streaming FcgidOutputBufferSize 0 \u0026lt;/IfModule\u0026gt; Apache sẽ được cài đặt như một dịch vụ. Bạn có thể muốn cấu hình nó không tự động khởi động và khởi động thủ công (nhấn nút Start và gõ \u0026ldquo;services\u0026rdquo;). Bạn có thể sử dụng \u0026ldquo;apache monitor\u0026rdquo; đi kèm với server. Ứng dụng này cho phép bạn khởi động/dừng và theo dõi Apache từ thanh tác vụ.\nTuy nhiên, mình sử dụng một script nhỏ để khởi động/dừng Apache, cơ sở dữ liệu và Garnet chỉ với một lệnh. Chi tiết hơn về điều này sẽ có sau.\nBạn có thể kiểm tra cấu hình của Apache server bằng cách gọi apache với tham số -t: httpd.exe -t.\nVhosts (virtual hosts) \u0026ldquo;vhost\u0026rdquo; (viết tắt của \u0026ldquo;virtual host\u0026rdquo;) là một cấu hình cách ly lắng nghe yêu cầu trên một giao diện / miền nhất định.\nMình đặt các cấu hình vhost vào tệp cấu hình R:\\httpd-include.conf được bao gồm từ tệp cấu hình chính. Mình sử dụng một vài tệp bao gồm như vậy, nhưng việc tổ chức là tùy thuộc vào bạn.\nMình sử dụng một vhost và miền riêng cho mỗi dự án mình làm việc để linh hoạt, từ việc tự động điền và những lợi ích khác.\nDưới đây là mẫu cấu hình đơn giản cho một vhost:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName your-project.lo DocumentRoot \u0026#34;R:/your-project\u0026#34; \u0026lt;directory \u0026#34;R:/your-project\u0026#34;\u0026gt; Options +ExecCGI +Indexes +FollowSymLinks AddHandler fcgid-script .php FCGIWrapper \u0026#34;C:/dev/php/php84/php-cgi.exe -c C:/dev/php/php84/php.ini\u0026#34; .php CGIPassAuth on AllowOverride all Require all granted \u0026lt;/directory\u0026gt; \u0026lt;/VirtualHost\u0026gt; 👉 Để chuyển đổi phiên bản PHP, tất cả những gì cần thay đổi là directive FCGIWrapper. 👈\nVhost được thiết lập một lần, vì vậy không cần phải chuyển đổi gì sau đó.\nTùy thuộc vào cấu hình của bạn, nhiều vhosts với các phiên bản PHP khác nhau có thể trỏ đến cùng một thư mục (nếu chuyển đổi git branch là cách bạn làm việc khi nâng cấp).\nMình sử dụng .lo làm TLD, nhưng cũng thấy .loc và .local. Bạn có thể thử nghiệm ở đây.\nBạn cũng có thể định nghĩa một server alias, chẳng hạn như www.your-project.lo bằng cách thêm ServerAlias www.your-project.lo vào cấu hình.\nMình sử dụng điều này như một mẫu để tạo các vhosts khác, cũng có thể tự động hóa việc tạo ra chúng, nhưng thực tế không tốn nhiều công sức.\nTệp hosts Bạn có thể đã kiểm tra rằng khi truy cập your-project.lo trên trình duyệt, nó có thể chuyển đến công cụ tìm kiếm của bạn.\nMáy tính của bạn không nhận diện miền và tìm kiếm địa chỉ IP bằng DNS, điều này sẽ thất bại với TLD .lo và bạn sẽ quay lại trang tìm kiếm.\nĐể khắc phục điều này, hãy chỉnh sửa tệp hosts trên hệ thống của bạn. Tệp này luôn được kiểm tra trước bất kỳ yêu cầu DNS nào được phát ra.\nTệp nằm ở đây:\nC:\\Windows\\system32\\drivers\\etc\\hosts Tệp này có thể được sử dụng cho nhiều mục đích khác, nhưng ở đây mình sẽ chỉ định các miền phát triển của mình đến localhost như sau:\n# # Dự án của tôi # 127.0.0.1 your-project.lo 127.0.0.1 adminer.lo next.adminer.lo #... Điều này sẽ chỉ cho hệ thống biết hướng tất cả lưu lượng mạng đi đến your-project.lo, adminer.lo và next.adminer.lo đến localhost của bạn. Apache sẽ xử lý từ đó.\nLưu lại tệp này và bạn đã sẵn sàng. Sau khi truy cập miền dự án của bạn trong trình duyệt, bạn nên thấy nó được hiển thị.\nTệp này có thể là tệp chỉ đọc hoặc được bảo vệ hệ thống, vì vậy hãy tìm kiếm lỗi ghi khi bạn lưu nó.\nLưu ý rằng để chỉnh sửa tệp hosts, bạn sẽ cần mở nó với quyền quản trị, nếu bạn gặp lỗi khi lưu các thay đổi. Hoặc bạn có thể thử Microsoft PowerToys đi kèm với trình chỉnh sửa hosts và một số công cụ hữu ích khác.\nVhost với ví dụ HTTPS Ở đây, mình sẽ thiết lập các miền adminer.lo và next.adminer.lo cho phát triển cục bộ với chuyển hướng HTTPS.\nMình tin rằng để sử dụng HTTPS, bạn sẽ phải tạo chứng chỉ tự ký của riêng mình. Mình đã làm điều này từ lâu và chưa tài liệu hóa cách thực hiện, vì vậy mình sẽ để bạn tự thử nghiệm. Hoặc sử dụng AI yêu thích của bạn để gợi ý.\nDưới đây là cấu hình vhost cho adminer.lo chạy trên PHP 7.4:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName adminer.lo Redirect / https://adminer.lo/ \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost 127.0.0.1:443\u0026gt; ServerName adminer.lo DocumentRoot \u0026#34;R:/adminer\u0026#34; ErrorLog \u0026#34;R:/adminer/error.log\u0026#34; \u0026lt;directory \u0026#34;R:/adminer\u0026#34;\u0026gt; Options +ExecCGI +Indexes +FollowSymLinks AddHandler fcgid-script .php FCGIWrapper \u0026#34;C:/dev/php/php74/php-cgi.exe -c C:/dev/php/php74/php.ini\u0026#34; .php CGIPassAuth on AllowOverride all Require all granted \u0026lt;/directory\u0026gt; SSLEngine on SSLCertificateFile ${SRVROOT}/conf/server.crt SSLCertificateKeyFile ${SRVROOT}/conf/server.key \u0026lt;/VirtualHost\u0026gt; Và đây là vhost cho phiên bản Adminer đã cập nhật của mình:\n\u0026lt;VirtualHost *:80\u0026gt; ServerName next.adminer.lo Redirect / https://next.adminer.lo/ \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost 127.0.0.1:443\u0026gt; ServerName next.adminer.lo DocumentRoot \u0026#34;R:/adminer-next\u0026#34; ErrorLog \u0026#34;R:/adminer-next/error.log\u0026#34; \u0026lt;directory \u0026#34;R:/adminer-next\u0026#34;\u0026gt; Options +ExecCGI +Indexes +FollowSymLinks AddHandler fcgid-script .php FCGIWrapper \u0026#34;C:/dev/php/php84/php-cgi.exe -c C:/dev/php/php84/php.ini\u0026#34; .php CGIPassAuth on AllowOverride all Require all granted \u0026lt;/directory\u0026gt; SSLEngine on SSLCertificateFile ${SRVROOT}/conf/server.crt SSLCertificateKeyFile ${SRVROOT}/conf/server.key \u0026lt;/VirtualHost\u0026gt; Bất cứ khi nào mình truy cập https://adminer.lo/ trong trình duyệt, PHP 7.4 sẽ phục vụ yêu cầu này; nhưng khi mình truy cập https://next.adminer.lo/, PHP 8.4 sẽ phục vụ yêu cầu đó.\nMình không cần phải chuyển đổi gì và mình có thể làm việc trên cả hai song song.\nDocument roots riêng cho các phiên bản PHP khác nhau Ở trên, mình đã trình bày cách cấu hình một vhost/mien cho mỗi dự án. Nếu bạn muốn sử dụng một vhost duy nhất cho một phiên bản PHP, điều đó cũng có thể. Bạn có thể chọn sử dụng các miền như php84.lo và php82.lo hoặc sử dụng các cổng khác nhau để chuyển hướng lưu lượng đến vhost đúng, và chỉ tạo một vhost cho mỗi phiên bản PHP.\nDự án của bạn sẽ có thể truy cập qua https://php84.lo hoặc http://localhost:8084, cách thức này tùy thuộc vào bạn để thử nghiệm.\nLưu ý rằng 80 là cổng HTTP mặc định và 443 là cổng HTTPS mặc định, mặc dù 8080 thường được sử dụng cho các server phát triển (ví dụ: Vue.js).\nMariaDB / MySQL Trên thực tế không quan trọng lắm việc bạn sử dụng MySQL hay MariaDB trong hầu hết các trường hợp. Có (những) sự khác biệt nhỏ, vì vậy hãy chọn cái mà khách hàng của bạn sử dụng trong sản xuất. Hoặc cài đặt cả hai.\nTruy cập MariaDB download page và chọn một phiên bản. Mình khuyên bạn nên chọn một phiên bản \u0026ldquo;hỗ trợ dài hạn\u0026rdquo;. Tại thời điểm viết, phiên bản này sẽ là 11.4.\nCài đặt cơ sở dữ liệu vào C:\\dev\\MariaDB. Mình cũng tạo một thư mục riêng cho dữ liệu của cơ sở dữ liệu, ví dụ: C:\\dev\\MariaDB_data.\nTệp my.ini của mình nằm trong thư mục MariaDB_data trông như thế này:\n[mysqld] datadir=C:/dev/local/MariaDB_data port=3306 character-set-server=utf8mb4 innodb_buffer_pool_size=8G max_heap_table_size=1G [client] port=3306 plugin-dir=C:/dev/MariaDB/lib/plugin Mình thích thiết lập utf8mb4 làm charset mặc định và tăng các giới hạn bộ nhớ để hoạt động mượt mà. Mình không chắc phần [client] có tác dụng gì.\nĐể quản lý cơ sở dữ liệu, mình sử dụng Adminer, một công cụ tối giản nhưng cung cấp tất cả tiện ích mà mình cần. Bạn có thể xem xét phpMyAdmin hoặc HeidiSQL hay một số công cụ tương tự.\nNếu bạn cần cài đặt nhiều phiên bản, hoặc cả MySQL và MariaDB, hãy điều chỉnh các cổng để mỗi cái lắng nghe trên một cổng khác nhau. Điều này sẽ phải được phản ánh trong ứng dụng của bạn.\nCũng như với Apache, bạn có thể muốn xác nhận cấu hình bằng cách gọi mysqld với tham số --validate-config.\nLàm việc với nhiều phiên bản PHP song song Bây giờ đến phần scripting. Không có vhosts trong CLI, vì vậy nếu bạn mở terminal (CMD, command line) và gõ php -v, bạn sẽ nhận được phiên bản PHP mà bạn đã cài đặt mặc định, nếu có.\nMẹo ở đây là tạo một thư mục (mà mình sẽ gọi là \u0026ldquo;thư mục bin\u0026rdquo;) trong C:/dev/bin và đưa nó vào biến PATH hệ thống. Ở đây, mình sẽ đặt các tệp lệnh .bat của mình.\nĐi tới \u0026ldquo;Chỉnh sửa biến môi trường hệ thống\u0026rdquo; và chỉnh sửa biến PATH sao cho nó bao gồm thư mục này. Windows sẽ chọn nhị phân đầu tiên trong thứ tự mà các thư mục xuất hiện trong biến PATH, vì vậy hãy đặt phần C:/dev/bin ở vị trí phù hợp.\nKhởi động một terminal mới và gõ echo %PATH%\u0026hellip; nó sẽ hiển thị ở đó (bạn phải khởi động lại terminal sau khi thay đổi biến PATH).\nTrong thư mục bin này, mình tạo các tệp như php84.bat cho mỗi phiên bản PHP. Mình cũng tạo com84.bat cho composer chạy với PHP 8.4 và bất kỳ phiên bản nào khác. Bằng cách này, mình có thể gọi các tệp nhị phân PHP một cách chọn lọc.\n@echo off REM PHP 8.4 REM %* passes all the input arguments to the PHP call \u0026#34;C:/dev/php/php84/php.exe\u0026#34; %* @echo off REM Composer running using PHP 8.4 REM %* passes all the input arguments to the PHP call php84 \u0026#34;C:\\dev\\composer\\composer.phar\u0026#34; %* Bây giờ mình có thể gọi php84 cho PHP v8.4 và com84 cho Composer chạy trên PHP 8.4. Mình tạo một lối tắt như vậy cho mỗi phiên bản mình cài đặt và có một phiên bản PHP làm mặc định cho php và com/composer.\nScripts Composer Thông thường, nếu bạn chỉ định một script chạy PHP hoặc lệnh Composer khác trong composer.json như sau:\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;cache:warmup\u0026#34;: [\u0026#34;php bin/cache-warmup.php\u0026#34;], \u0026#34;cache:purge\u0026#34;: [\u0026#34;php bin/cache-purge.php\u0026#34;], \u0026#34;cache:test\u0026#34;: [\u0026#34;composer cache:warmup\u0026#34;, \u0026#34;composer cache:purge\u0026#34;] } } Bạn sẽ thấy script được gọi bằng nhị phân php/composer mặc định chứ không phải cái mà bạn chạy lệnh với.\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;check\u0026#34;: [\u0026#34;php -v\u0026#34;] } } Script này lẽ ra sẽ in ra phiên bản php đúng, nhưng nó lại in ra phiên bản PHP mặc định của hệ thống mỗi lần, điều này không phải là điều mà chúng ta mong muốn:\nMẹo là sử dụng @php và @composer trong tệp JSON, điều này cho phép composer \u0026ldquo;sử dụng cùng nhị phân PHP như nó đã được gọi bởi\u0026rdquo;:\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;check\u0026#34;: [\u0026#34;@php -v\u0026#34;] } } Như một quy tắc chung, luôn chỉ định các script của bạn là @php và @composer:\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;cache:warmup\u0026#34;: [\u0026#34;@php bin/cache-warmup.php\u0026#34;], \u0026#34;cache:purge\u0026#34;: [\u0026#34;@php bin/cache-purge.php\u0026#34;], \u0026#34;cache:test\u0026#34;: [\u0026#34;@composer cache:warmup\u0026#34;, \u0026#34;@composer cache:purge\u0026#34;] } } Built-in server Giả định rằng dự án của bạn sử dụng thư mục /public làm document root, bạn cũng có thể chỉ cần chạy built-in PHP server, nhưng hãy nhớ rằng nó không được thiết kế để phục vụ các tệp tĩnh (hình ảnh, CSS, JS).\nTrong terminal, chạy:\nphp -S 127.0.0.1:42300 -t public/ Mình đang sử dụng cấu trúc composer.json như thế này, sau đó mình gọi nó là composer serve trong thư mục dự án:\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;serve\u0026#34;: [ \u0026#34;Composer\\\\Config::disableProcessTimeout\u0026#34;, \u0026#34;@php -S 127.0.0.1:42300 -t public/\u0026#34; ] }, \u0026#34;scripts-descriptions\u0026#34;: { \u0026#34;serve\u0026#34;: \u0026#34;Chạy một server PHP nhẹ\u0026#34; } } Nhớ rằng, bạn đang kiểm soát phiên bản PHP mà bạn chạy script với. Dù là com84 serve hay com82 serve.\nCác script hữu ích khác Một script để khởi động server Apache (với mô-đun PHP), cơ sở dữ liệu MariaDB và Garnet cho cache - amp-on.bat:\n@echo off REM Khởi động Apache, MariaDB và Garnet sc start ApacheHTTPServer sc start MariaDB sc start GarnetServer \u0026hellip; và script amp-off chứa sc stop để dừng các dịch vụ như vậy.\nSau đó là một script để khởi động lại Apache. Script này phức tạp hơn và chờ dịch vụ dừng và khởi động:\n@echo off REM Khởi động lại Apache set \u0026#34;ServiceName=ApacheHTTPServer\u0026#34; REM Dừng dịch vụ echo Dịch vụ %ServiceName% đang tắt. sc stop %ServiceName% REM Chờ dịch vụ dừng :LOOP timeout /t 2 /nobreak \u0026gt;nul sc query %ServiceName% | find \u0026#34;STATE\u0026#34; | find \u0026#34;STOPPED\u0026#34; \u0026gt;nul if %errorlevel% equ 0 ( goto START_SERVICE ) else ( goto LOOP ) :START_SERVICE REM Khởi động dịch vụ echo. echo Dịch vụ %ServiceName% đang khởi động. sc start %ServiceName% REM Chờ dịch vụ khởi động :WAIT_START timeout /t 2 /nobreak \u0026gt;nul sc query %ServiceName% | find \u0026#34;STATE\u0026#34; | find \u0026#34;RUNNING\u0026#34; \u0026gt;nul if %errorlevel% equ 0 ( goto SHOW_MESSAGE ) else ( goto WAIT_START ) :SHOW_MESSAGE echo. echo Dịch vụ %ServiceName% hiện đang chạy. Kết luận Đây không phải là một thiết lập ngắn gọn, nhưng nó đáng giá trong dài hạn. Việc cài đặt thêm các phiên bản PHP chỉ cần tạo một vài tệp và thư mục và sao chép-những tệp php.ini, đôi khi điều chỉnh một giá trị ở đây và đó. Cập nhật cũng rất dễ dàng.\nBạn sẽ hưởng lợi từ một cấu hình Windows hiệu quả và linh hoạt. Không còn phải chờ đợi các nhà phát hành bên thứ ba phát hành phiên bản mới!\n"},{"section":"Blog","slug":"/web-development/php/huong-dan-tich-hop-cloudinary-voi-vue-va-laravel-inertia/","title":"Hướng dẫn tích hợp Cloudinary với Vue và Laravel Inertia","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"VueJS, Web Development, Laravel","tags":"Cloudinary, Vue, Laravel","content":"Giới thiệu Mình rất vui được chia sẻ với các bạn cách tích hợp Cloudinary vào ứng dụng Vue sử dụng Laravel với Inertia. Việc này sẽ giúp chúng ta quản lý hình ảnh và video một cách hiệu quả và tối ưu hơn trong ứng dụng của mình.\nBước 1: Cài đặt Cloudinary Trước tiên, chúng ta cần cài đặt SDK của Cloudinary. Mở terminal và chạy lệnh sau:\nnpm install cloudinary-vue Bước 2: Cấu hình Cloudinary Tiếp theo, mình sẽ cấu hình Cloudinary trong dự án. Tạo file cloudinary.js trong thư mục src và thêm đoạn mã sau:\nimport { Cloudinary } from \u0026#34;cloudinary-core\u0026#34;; const cl = new Cloudinary({ cloud_name: \u0026#34;YOUR_CLOUD_NAME\u0026#34;, secure: true, }); export default cl; Hãy nhớ thay thế YOUR_CLOUD_NAME bằng tên miền của bạn trên Cloudinary.\nBước 3: Sử dụng Cloudinary trong Component Bây giờ, chúng ta sẽ sử dụng Cloudinary trong một component Vue. Mở file component bạn muốn tích hợp và thêm mã sau:\n\u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;cl-image :public-id=\u0026#34;imageId\u0026#34;\u0026gt;\u0026lt;/cl-image\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import { ClImage } from \u0026#34;cloudinary-vue\u0026#34;; import cl from \u0026#34;../cloudinary.js\u0026#34;; export default { components: { ClImage }, data() { return { imageId: \u0026#34;YOUR_IMAGE_ID\u0026#34;, }; }, }; \u0026lt;/script\u0026gt; Đừng quên thay thế YOUR_IMAGE_ID bằng ID hình ảnh mà bạn muốn hiển thị.\nBước 4: Tải hình ảnh lên Cloudinary Để tải hình ảnh lên Cloudinary, bạn có thể sử dụng API của họ. Dưới đây là một ví dụ đơn giản:\nconst uploadImage = async (file) =\u0026gt; { const formData = new FormData(); formData.append(\u0026#34;file\u0026#34;, file); formData.append(\u0026#34;upload_preset\u0026#34;, \u0026#34;YOUR_UPLOAD_PRESET\u0026#34;); const response = await fetch( `https://api.cloudinary.com/v1_1/YOUR_CLOUD_NAME/image/upload`, { method: \u0026#34;POST\u0026#34;, body: formData, }, ); const data = await response.json(); return data; }; Lưu ý và Best Practices Bảo mật thông tin: Khi làm việc với API, hãy đảm bảo rằng bạn không công khai các thông tin nhạy cảm như API_KEY hay API_SECRET. Tối ưu hóa hình ảnh: Sử dụng các tham số của Cloudinary để tối ưu hóa hình ảnh trước khi tải lên để tiết kiệm băng thông và thời gian tải. Hy vọng rằng hướng dẫn này sẽ giúp các bạn dễ dàng tích hợp Cloudinary vào ứng dụng của mình. Nếu có bất kỳ câu hỏi nào, đừng ngần ngại chia sẻ nhé!\n"},{"section":"Blog","slug":"/web-development/docker/huong-dan-tu-dong-hoa-trien-khai-ung-dung-voi-docker-hub-webhook/","title":"Hướng dẫn tự động hóa triển khai ứng dụng với Docker Hub Webhook","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"DevOps, Docker","tags":"Docker, Triển khai, Webhooks","content":"Tại sao tự động hóa triển khai quan trọng? Tự động hóa triển khai là rất quan trọng để tối ưu hóa quy trình phát triển. Thay vì phải triển khai mã thủ công mỗi khi có thay đổi, một hệ thống triển khai tự động sẽ đảm bảo quá trình diễn ra mượt mà và hiệu quả hơn.\nTuy nhiên, không phải tất cả các đội ngũ đều có quyền truy cập vào cơ sở hạ tầng tiên tiến như Kubernetes, nền tảng CI/CD hay các dịch vụ đám mây đắt tiền. Nhiều lập trình viên phụ thuộc vào việc lưu trữ kho miễn phí (như GitHub và Docker Hub) và các máy chủ VPS truyền thống với chi phí tối thiểu và tài nguyên hạn chế. Trong những trường hợp như vậy, một phương pháp triển khai nhẹ nhàng dựa trên webhook sẽ cung cấp một giải pháp đơn giản và hiệu quả.\nBài hướng dẫn này sẽ giúp bạn thiết lập một pipeline triển khai tự động bằng cách sử dụng webhooks của Docker Hub và một máy chủ webhook, lý tưởng cho các môi trường có chi phí thấp và tài nguyên tối thiểu.\nLưu ý: Việc xây dựng một Docker image là một quy trình tách biệt có thể được thực hiện trên máy cục bộ của bạn hoặc thông qua một hệ thống CI/CD bên ngoài. Khi image đã được xây dựng và đẩy lên Docker Hub, bước tiếp theo là tự động hóa việc triển khai nó. Đây chính là lúc webhooks phát huy tác dụng.\nTạo script triển khai Bước đầu tiên là tạo một script triển khai. Script này sẽ xử lý việc xóa container hiện tại, kéo image mới nhất và chạy container đã cập nhật.\n#!/bin/bash docker stop \u0026lt;container_name\u0026gt; || true docker rm \u0026lt;container_name\u0026gt; || true docker pull \u0026lt;image_tag\u0026gt; docker run -d --name \u0026lt;container_name\u0026gt; \u0026lt;image_tag\u0026gt; Lưu ý: Đặt tên script và lưu nó ở vị trí phù hợp trên máy chủ của bạn, đừng quên làm cho nó có thể thực thi:\nchmod +x deploy.sh Cài đặt \u0026amp; cấu hình Webhook Bước tiếp theo là cài đặt và cấu hình webhook. Mình đang sử dụng gói webhook từ GitHub. Đầu tiên, cài đặt nó bằng lệnh sau:\nsudo apt update \u0026amp;\u0026amp; sudo apt install -y webhook Tiếp theo, chúng ta cần tạo một file cấu hình cho webhook. Cấu hình này định nghĩa một loạt các hành động được kích hoạt khi webhook được gọi. Bạn cũng có thể gửi payloads, thực hiện xác thực, và nhiều hơn nữa.\n[ { \u0026#34;id\u0026#34;: \u0026#34;deploy\u0026#34;, \u0026#34;execute-command\u0026#34;: \u0026#34;/home/admin/scripts/deploy.sh\u0026#34;, \u0026#34;command-working-directory\u0026#34;: \u0026#34;/home/admin/scripts\u0026#34; } ] Lưu file cấu hình trên máy chủ của bạn và sau đó khởi động máy chủ webhook:\nwebhook -verbose -hotreload -hooks=/home/admin/webhook/hooks.json Nó sẽ khởi động trên cổng mặc định 9000 và cung cấp cho bạn một endpoint HTTP:\nhttp://yourserver:9000/hooks/{hook_id} Bằng cách thực hiện yêu cầu HTTP GET hoặc POST tới endpoint đó, script mà bạn đã chỉ định sẽ được thực thi.\nBạn có thể thay đổi ip, cổng, giao thức, v.v. Tài liệu là bạn đồng hành của bạn 😉.\nThiết lập trong Docker Hub Tiếp theo, chúng ta cần thêm một webhook vào Docker Hub bằng cách làm theo các bước sau:\nĐăng nhập vào tài khoản Docker Hub của bạn Đi đến kho lưu trữ của bạn Đi đến tab Webhooks Nhập tên webhook và URL rồi nhấn vào biểu tượng (+) Vậy là xong! Từ giờ, bất cứ khi nào một image mới được đẩy lên, Docker Hub sẽ gửi một webhook đến máy chủ của bạn, tự động kích hoạt script triển khai. 🚀\nLời khuyên: Hãy đảm bảo kiểm tra log máy chủ của bạn để xác nhận rằng mọi thứ hoạt động như mong đợi.\n"},{"section":"Blog","slug":"/tin-cong-nghe/kham-pha-apple-vision-pro-thuc-te-ao-va-thuc-te-tang-cuong/","title":"Khám Phá Apple Vision Pro: Thực Tế Ảo và Thực Tế Tăng Cường","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Apple, Thực tế ảo, Công nghệ","content":"Giới thiệu về Apple Vision Pro Trong suốt gần một thập kỷ qua, mọi người đã bàn luận về việc Apple sẽ gia nhập thị trường headset thực tế ảo và thực tế tăng cường. Tại WWDC 2023, Apple đã chính thức giới thiệu Vision Pro, chiếc headset đầu tiên chạy trên hệ điều hành visionOS, dự kiến sẽ ra mắt vào ngày 2 tháng 2 năm 2024.\nGiá cả và thông số kỹ thuật Vision Pro có mức giá khởi điểm là 3,499 USD với bộ nhớ trong 256GB. Ngoài ra, nếu bạn cần kính thuốc, Zeiss cũng cung cấp tùy chọn với mức giá 149 USD.\nĐánh giá từ người dùng Theo đánh giá của chúng mình, màn hình của Vision Pro là một kỳ quan công nghệ với khả năng theo dõi tay và mắt vượt bậc so với những sản phẩm trước đó. Tuy nhiên, điểm cần lưu ý là các điều khiển này có thể không ổn định và những hình ảnh đại diện ảo (Personas) của Apple có thể gây cảm giác không thoải mái cho một số người.\nTính năng nổi bật Headset mới này sử dụng hai chip Apple Silicon (M2 Ultra và R1) và có thể hoạt động liên tục trong hai giờ với pin gắn ngoài, hoặc lâu hơn nếu được cắm điện. Nó cũng hỗ trợ điều khiển tự nhiên với khả năng theo dõi tay, mắt và cả lệnh giọng nói. Người dùng có thể dễ dàng chuyển đổi giữa AR và VR bằng cách sử dụng vòng điều chỉnh kỹ thuật số. Đặc biệt, thiết bị còn hiển thị mắt của người dùng ở mặt trước, giúp người khác biết rằng họ vẫn có thể nhìn thấy người đeo headset.\nKết luận Mình hy vọng bài viết này đã cung cấp cho bạn cái nhìn tổng quan về chiếc headset Vision Pro của Apple. Hãy cùng mình theo dõi những thông tin cập nhật tiếp theo về sản phẩm này.\n"},{"section":"Blog","slug":"/tin-cong-nghe/kham-pha-trai-nghiem-am-nhac-dinh-cao-voi-metallica-tren-vision-pro/","title":"Khám Phá Trải Nghiệm Âm Nhạc Đỉnh Cao Với Metallica Trên Vision Pro","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Metallica, Vision Pro, Âm nhạc","content":"Giới Thiệu Trong video concert mới nhất của Metallica mà Apple vừa phát hành cho Vision Pro, có một khoảnh khắc đặc biệt khi ca sĩ chính James Hetfield quỳ xuống bên cạnh một fan hâm mộ, cả hai cùng hò hét. Đó là một khoảnh khắc đầy cảm xúc, khi fan hâm mộ không thể kiềm chế và đã rơi nước mắt.\nNội Dung Video Video dài khoảng 25 phút được ghi lại trong một buổi biểu diễn tại Mexico City, bao gồm ba bài hát của Metallica: “Whiplash,” “One,” và “Enter Sandman.” Chúng ta có thể thấy những cảnh quay cận cảnh của các thành viên ban nhạc và fan hâm mộ, tạo nên sự kết nối mạnh mẽ giữa nghệ sĩ và khán giả.\nCông Nghệ và Trải Nghiệm Với định dạng video 180 độ của Apple và chất lượng sản xuất cao, trải nghiệm này mang lại cảm giác chân thực và sâu sắc hơn so với video 2D thông thường. Mình cảm thấy như đang ở ngay đó, khi camera theo chân Hetfield từ phía sau, khiến mình nhận ra rằng anh ấy rất cao. Cảm xúc dâng trào khi bài “One” bắt đầu, và mình có thể cảm nhận được sự mệt mỏi khi nghe Kirk Hammett kéo dài đoạn solo.\nKết Luận Bộ sưu tập Apple Immersive trên Vision Pro đã cải thiện rất nhiều trong những tháng gần đây với những video như The Weeknd: Open Hearts và Submerged. Tuy nhiên, Metallica không chỉ là một video immersive tốt; nó còn là một video concert xuất sắc, đặt ra tiêu chuẩn mà Apple cần hướng tới trong tương lai.\nLời Khuyên Tham gia trải nghiệm: Nếu bạn có cơ hội, hãy thử xem video concert này trên Vision Pro để cảm nhận sự khác biệt. Chia sẻ cảm xúc: Đừng ngần ngại chia sẻ những cảm xúc của bạn khi xem các video immersive này để kết nối với cộng đồng. Khám phá thêm: Hãy theo dõi các video mới trong bộ sưu tập Apple Immersive để không bỏ lỡ những trải nghiệm tuyệt vời khác. "},{"section":"Blog","slug":"/tin-cong-nghe/kham-pha-tuong-lai-cua-tim-kiem-ai-trong-thuong-mai-dien-tu/","title":"Khám Phá Tương Lai Của Tìm Kiếm AI Trong Thương Mại Điện Tử","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Tìm kiếm AI, Thương mại điện tử, Công nghệ","content":"Tổng Quan Cách mà người tiêu dùng tìm kiếm thông tin đã thay đổi đáng kể trong những thập kỷ qua. Thay vì dựa vào những liên kết tìm kiếm truyền thống của Google, giờ đây, mọi người đang nhanh chóng thích nghi với một định dạng mới: các chatbot AI giúp họ tìm kiếm thông tin.\nTăng Trưởng Tìm Kiếm AI Theo nghiên cứu mới từ Adobe, tìm kiếm AI đã trở thành một kênh lưu lượng truy cập quan trọng cho các nhà bán lẻ. Công ty đã phân tích \u0026ldquo;hơn 1 nghìn tỷ lượt truy cập vào các trang web bán lẻ của Mỹ\u0026rdquo; và tiến hành khảo sát \u0026ldquo;hơn 5.000 người tham gia\u0026rdquo; để hiểu rõ hơn cách mọi người đang sử dụng AI.\nSự Tăng Trưởng Đáng Kinh Ngạc Báo cáo cho thấy rằng lượt giới thiệu từ tìm kiếm AI đã tăng 1.300% trong mùa lễ hội 2024 so với năm 2023, với Cyber Monday ghi nhận mức tăng 1.950%. Mặc dù những con số này rất ấn tượng, nhưng điều này cũng có thể dự đoán được vì tìm kiếm AI vẫn còn đang trong giai đoạn phát triển.\nTương Tác Người Dùng Điều thú vị hơn là các chỉ số tương tác: Người dùng được giới thiệu từ tìm kiếm AI thường ở lại trang lâu hơn 8%, duyệt qua các trang khác nhiều hơn 12%, và có khả năng rời đi (hoặc \u0026ldquo;bounce\u0026rdquo;) ít hơn 23% so với những lượt truy cập truyền thống. Điều này cho thấy rằng các công cụ AI đang dẫn dắt người dùng đến các trang liên quan hơn.\nNhững Thách Thức Ban Đầu Việc triển khai các công cụ tìm kiếm AI chưa hoàn hảo và không rõ ràng liệu nó có thực sự hữu ích hay không. Gần một năm kể từ khi Google ra mắt AI Overviews (trước đây gọi là Search Generative Experience), đã có nhiều vấn đề xảy ra. Những sai sót như việc khuyên người dùng thêm keo vào pizza để phô mai dính lại hay tuyên bố rằng cựu Tổng thống Barack Obama là tổng thống Hồi giáo đầu tiên đã gây nhiều tranh cãi.\nSự Phát Triển Của Các Startup Có một startup non trẻ tên là Perplexity, hiện đang được định giá lên tới 9 tỷ USD, cung cấp tìm kiếm AI qua chatbot (có quảng cáo đi kèm) và đã gặp phải nhiều tranh cãi. Vào tháng Sáu, một biên tập viên của Forbes đã cáo buộc rằng startup này đã sao chép báo cáo của nhóm mình nhờ vào một tính năng mới của Perplexity. CEO Aravind Srinivas đã nói rằng sản phẩm \u0026ldquo;còn nhiều vấn đề và sẽ cải thiện theo thời gian\u0026rdquo;.\nĐối Thủ Cạnh Tranh Mặc dù gặp nhiều vấn đề ban đầu, OpenAI cũng đã ra mắt tính năng tìm kiếm trong sản phẩm chủ lực của mình, ChatGPT. Học hỏi từ những sai lầm của Google và Perplexity, OpenAI đã công bố tính năng tìm kiếm như một nguyên mẫu nhằm giảm thiểu những tình huống bất ngờ có thể xảy ra. Nó cũng đi kèm với nhiều quan hệ đối tác truyền thông, nhấn mạnh rằng các nhà xuất bản có quyền kiểm soát cách công việc của họ xuất hiện trong ChatGPT.\nTương Lai Của Tìm Kiếm AI Hiện tại, tìm kiếm AI có vẻ như sẽ ở lại — và người tiêu dùng đang định hình nó theo nhu cầu của họ. Khảo sát đi kèm của Adobe với 5.000 người tiêu dùng cho thấy 39% trong số họ sử dụng tìm kiếm AI cho mua sắm trực tuyến, 55% để nghiên cứu, và 47% tìm kiếm gợi ý về những gì nên mua. Những con số này thường khiến các nhà quảng cáo cảm thấy thích thú. Tuy nhiên, trong khi Perplexity và Google có quảng cáo đi kèm với kết quả tìm kiếm AI, OpenAI thì không. CEO Sam Altman của OpenAI đã nói rằng công ty sẽ đặt quảng cáo trong ChatGPT chỉ khi \u0026ldquo;không có lựa chọn nào khác\u0026rdquo; vì ông nghĩ rằng \u0026ldquo;quảng cáo cộng với AI là điều gì đó không ổn định\u0026rdquo;.\nKết Luận Dù vẫn còn sớm, tìm kiếm AI đã rõ ràng thu hút sự chú ý của người tiêu dùng khi họ thử nghiệm với cách tìm kiếm mới này. Nhiều người chỉ trích cảm thấy rằng tìm kiếm truyền thống đã bị hỏng từ nhiều năm nay, đầy rẫy quảng cáo và spam SEO. Tìm kiếm AI đang nổi lên như một giải pháp tiềm năng — nếu nó có thể tránh được những lực cản tương tự.\n"},{"section":"Blog","slug":"/tin-cong-nghe/phan-tich-vu-kien-lien-quan-den-bo-tai-chinh-hoa-ky/","title":"Phân Tích Vụ Kiện Liên Quan Đến Bộ Tài Chính Hoa Kỳ","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Bộ Tài Chính, Bảo Mật Thông Tin, Luật Pháp","content":"Tóm Tắt Vụ Việc Mình muốn chia sẻ với các bạn một vụ kiện đang diễn ra chống lại Bộ Tài Chính Hoa Kỳ, trong đó một nhân viên đã vi phạm chính sách bảo mật rất nghiêm trọng.\nThông Tin Cụ Thể Theo tài liệu được nộp vào thứ Sáu, một nhân viên 25 tuổi của Bộ Chính Phủ Hiệu Quả (DOGE) đã gửi một bảng tính có thông tin cá nhân cho hai thành viên khác của chính quyền Trump. Nhân viên này, Marko Elez, đã từng làm việc tại các công ty của Elon Musk như X và SpaceX, và hiện tại đã nghỉ việc vào đầu tháng Hai do những bài đăng phân biệt chủng tộc trên mạng xã hội.\nDOGE đã tái thuê Elez để làm việc tại Cơ Quan Quản Lý An Sinh Xã Hội. Điều này đã gây ra một số tranh cãi trong công chúng.\nVấn Đề Pháp Lý 19 tổng chưởng lý bang đã kiện Bộ Tài Chính vào tháng Hai về việc DOGE có quyền truy cập vào hệ thống của bộ này. Bộ Tài Chính đã cho biết rằng Elez đã \u0026ldquo;nhầm lẫn\u0026rdquo; được cấp quyền truy cập đọc và ghi. Hiện tại, quyền truy cập của DOGE vào hệ thống đã bị hạn chế bởi một lệnh của tòa án.\nPhân Tích Tài Liệu Theo tài liệu của Bộ Tài Chính, khi phân tích máy tính xách tay và tài khoản email của Elez, họ phát hiện rằng anh ta không thực hiện bất kỳ thay đổi nào đối với các hệ thống thanh toán của Bộ. Tuy nhiên, Elez đã gửi một bảng tính có chứa tên, loại giao dịch và số tiền đến hai quan chức chưa được nêu tên tại Cơ Quan Dịch Vụ Tổng Hợp Hoa Kỳ.\nBộ Tài Chính cho biết tài liệu này có mức độ rủi ro thấp vì không chứa các thông tin nhạy cảm như số an sinh xã hội hay ngày sinh. Tuy nhiên, Elez đã vi phạm chính sách khi không mã hóa tài liệu hoặc không có sự chấp thuận thích hợp trước khi gửi.\nKết Luận Những thông tin từ phân tích này không giải quyết được bất kỳ lo ngại nào mà tòa án đã nêu về quy trình gia nhập đội ngũ DOGE một cách vội vã và hỗn loạn.\nMình hy vọng rằng bài viết này đã giúp các bạn hiểu rõ hơn về vụ việc và các vấn đề liên quan đến bảo mật thông tin trong chính phủ.\n"},{"section":"Blog","slug":"/tin-cong-nghe/roku-va-chien-luoc-quang-cao-moi-bai-hoc-tu-phan-ung-khach-hang/","title":"Roku và Chiến Lược Quảng Cáo Mới: Bài Học Từ Phản Ứng Khách Hàng","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Roku, Quảng cáo, Streaming","content":"Giới thiệu Cuối tuần qua, nhiều người sở hữu thiết bị Roku đã nhận thấy một phương thức quảng cáo mới gây khó chịu: một đoạn trailer cho Moana 2 bắt đầu phát trước khi họ đến được màn hình chính của Roku.\nPhản hồi của khách hàng Phản ứng từ phía khách hàng rất tiêu cực. Mình muốn nhấn mạnh rằng Roku chủ yếu kiếm tiền từ quảng cáo, chứ không phải từ các thiết bị streaming giá rẻ. Nhưng cũng giống như Amazon trước đó, Roku đang phát hiện ra rằng việc tăng cường quảng cáo có thể đi quá xa. Mặc dù người dùng có thể thoát khỏi quảng cáo sau khi nó bắt đầu, nhưng điều này không làm giảm bớt sự thất vọng.\n\u0026ldquo;Tôi chấp nhận quảng cáo banner, nhưng tôi sẽ không chịu đựng việc xem một video tải khi mở Roku của mình,\u0026rdquo; một người dùng viết trên Reddit.\nChiến lược của Roku Trong cuộc gọi thu nhập gần đây, người sáng lập và CEO của Roku, Anthony Wood, đã thảo luận về việc cân bằng giữa việc phát triển cách trình bày quảng cáo mà không làm hỏng màn hình chính mà ông coi là \u0026ldquo;biểu tượng\u0026rdquo;. Ông nói: \u0026ldquo;Chiến lược của chúng tôi không chỉ đơn giản là đặt một quảng cáo video lớn trên màn hình chính. Chúng tôi rất cẩn thận trong việc đặt quảng cáo trên màn hình chính\u0026rdquo;. Mục tiêu của Roku là tăng doanh thu quảng cáo mà vẫn đảm bảo sự hài lòng của khách hàng.\nĐánh giá và khuyến nghị Roku đã bắt đầu đi xa hơn với quảng cáo trên màn hình chính từ năm ngoái. Trong một tuyên bố với Ars Technica, Roku đã tránh việc thừa nhận rằng họ có thể đã đi quá xa, nói rằng công ty \u0026ldquo;đã và sẽ luôn yêu cầu thử nghiệm và đổi mới liên tục\u0026rdquo;. Đoạn quảng cáo khởi động Moana rõ ràng là một ví dụ về \u0026ldquo;cách mới để giới thiệu thương hiệu và chương trình trong khi vẫn cung cấp trải nghiệm người dùng đơn giản và dễ chịu.\u0026rdquo; Tuy nhiên, từ phản hồi đến nay, khách hàng dường như không coi đây là điều dễ chịu.\nMình khuyên bạn nên cân nhắc lựa chọn sản phẩm khác như Apple TV 4K hoặc sử dụng các công cụ bên thứ ba để tránh quảng cáo. Nhưng hãy cẩn thận, một số khách hàng Roku cho rằng công ty có thể tìm cách ngăn chặn các giải pháp như Pi-hole.\n"},{"section":"Blog","slug":"/web-development/sql/thu-tu-thuc-thi-cau-lenh-sql-huong-dan-chi-tiet/","title":"Thứ tự thực thi câu lệnh SQL: Hướng dẫn chi tiết","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, SQL","tags":"SQL, Cơ sở dữ liệu, Tối ưu hóa","content":"SQL Query Logical Order: Hướng dẫn từng bước Hiểu rõ thứ tự thực thi logic của một câu lệnh SQL là điều cần thiết để viết các truy vấn cơ sở dữ liệu tối ưu và hiệu quả. Khác với thứ tự cú pháp SQL thông thường, quá trình thực thi theo một cách tiếp cận hệ thống. Dưới đây là phân tích chi tiết:\nFROM – Xác định Nguồn Dữ Liệu\nQuá trình thực thi câu lệnh bắt đầu bằng việc chọn bảng chính (t1) từ đó dữ liệu sẽ được truy xuất. Bước này đặt nền tảng cho các thao tác tiếp theo.\nJOIN – Gộp Bảng\nNếu có nhiều bảng tham gia, thao tác JOIN sẽ gộp một bảng khác (t2) dựa trên các điều kiện đã chỉ định, chuẩn bị một tập dữ liệu thống nhất để lọc và xử lý.\nON – Định Nghĩa Điều Kiện Ghép\nCâu lệnh ON thiết lập các điều kiện cho thao tác JOIN, đảm bảo rằng các bản ghi đúng được liên kết, thường sử dụng mối quan hệ khóa chính-khóa ngoại (ví dụ: t1.column_a = t2.column_a).\nWHERE – Lọc Dòng\nCâu lệnh WHERE áp dụng các ràng buộc để lọc các dòng trước khi bất kỳ phép tổng hợp hoặc nhóm nào xảy ra, nâng cao hiệu suất truy vấn bằng cách giảm thiểu các phép toán không cần thiết.\nGROUP BY – Phân Loại Dữ Liệu\nDữ liệu sau đó được nhóm dựa trên một cột cụ thể, cho phép các hàm tổng hợp như COUNT(), SUM(), và AVG() hoạt động trên mỗi nhóm một cách hiệu quả.\nHAVING – Lọc Nhóm\nKhác với WHERE, điều kiện HAVING lọc các kết quả nhóm dựa trên các điều kiện như HAVING COUNT(*) \u0026gt; 10.\nORDER BY – Sắp Xếp Kết Quả\nKết quả truy vấn sau đó được sắp xếp theo thứ tự tăng dần (ASC) hoặc giảm dần (DESC) dựa trên một hoặc nhiều cột, đảm bảo đầu ra được cấu trúc rõ ràng.\nLIMIT – Giới Hạn Đầu Ra\nCuối cùng, câu lệnh LIMIT giới hạn số lượng dòng trả về, tối ưu hóa hiệu suất và ngăn chặn việc truy xuất dữ liệu không cần thiết.\n🚀 Làm chủ thứ tự thực thi SQL giúp bạn viết các truy vấn hiệu quả, giảm thời gian thực thi và tối ưu hóa hiệu suất cơ sở dữ liệu. Bạn có mẹo nào về tối ưu hóa SQL không?\n"},{"section":"Blog","slug":"/web-development/ai/toi-uu-hoa-quy-trinh-marketing-voi-ai-agents/","title":"Tối ưu hóa quy trình marketing với AI Agents","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, AI","tags":"Marketing, AI, Tự động hóa","content":"Tối ưu hóa quy trình marketing với AI Agents Bạn có bao giờ tự hỏi liệu có thể tối ưu hóa quy trình marketing, nâng cao hiệu suất và đổi mới nhanh hơn mà không cần làm thêm nhiều việc không? Các AI agents đã biến điều này thành hiện thực cho marketing. Từ việc tự động hóa các nhiệm vụ thường ngày đến cá nhân hóa tương tác với khách hàng, chúng giải phóng đội ngũ marketing của bạn để tập trung vào những gì thực sự quan trọng: tăng trưởng và chiến lược.\nDigital marketing trước đây giống như một chuyến đi đường dài với chỉ một bản đồ giấy. Mặc dù thú vị, nhưng nó đòi hỏi rất nhiều công sức thủ công và đoán mò, và đã có một vài sự cố dọc đường. Bạn phải nghiên cứu từ khóa, lịch đăng bài và theo dõi hiệu suất một cách thủ công, hy vọng sẽ tiếp cận đúng đối tượng với thông điệp phù hợp vào thời điểm thích hợp.\nĐây chính là lúc AI agents xuất hiện - và đột nhiên, bạn được nâng cấp lên một hệ thống GPS giúp vạch ra lộ trình nhanh nhất, dự đoán tình trạng giao thông, và thậm chí gợi ý những điểm dừng chân đẹp. Những hệ thống tự động này đang phát triển nhanh chóng, vượt xa việc chỉ đáp ứng lệnh mà còn thực hiện các nhiệm vụ phức tạp một cách độc lập.\nVới AI agents trong marketing, các chiến dịch học hỏi, thích ứng và tối ưu hóa theo thời gian thực, biến marketing từ một hành trình thủ công thành một cuộc phiêu lưu dựa trên dữ liệu. Giống như bản đồ số đã cách mạng hóa những chuyến đi đường dài, AI agents hiện đang định nghĩa lại marketing kỹ thuật số.\nHiểu về AI Agents và khả năng của chúng trong marketing Một AI agent là phần mềm được thiết kế để thực hiện các nhiệm vụ một cách tự động. Khác với phần mềm truyền thống tuân theo các quy tắc nghiêm ngặt, AI agents sử dụng các công nghệ tiên tiến như LLMs (Large Language Models) - chẳng hạn như GPT4, Claude và Gemini - để đưa ra quyết định dựa trên sự hiểu biết của chúng. Điều này cho phép chúng vượt ra ngoài các quy trình tĩnh, thích ứng để đạt được mục tiêu đã định.\nBạn có thể xem chúng như một trợ lý kỹ thuật số, không chỉ để thực hiện các lệnh; mà còn để suy nghĩ, lên kế hoạch và hành động nhằm hỗ trợ các marketer. Theo một báo cáo gần đây, các marketer hiện đang sử dụng AI, 93% trong số họ dùng để tạo nội dung nhanh hơn, 81% để khám phá thông tin nhanh hơn, và 90% để ra quyết định nhanh hơn.\nHãy tưởng tượng bạn đang chạy một chiến dịch quảng cáo cho một sản phẩm chăm sóc da mới. Marketing truyền thống có thể bao gồm việc xác định nhóm đối tượng mục tiêu một cách thủ công bằng cách sử dụng dữ liệu hạn chế, tĩnh. Điều này yêu cầu thời gian và công sức đáng kể, dựa vào các khảo sát và phương pháp tốn công để thu thập thông tin. Những thông tin này sẽ nhanh chóng trở nên lỗi thời khi sở thích của khách hàng thay đổi, khiến cho việc giữ cho các chiến dịch luôn phù hợp và hiệu quả trở nên khó khăn.\nTuy nhiên, AI agents sẽ nâng cao việc nhắm mục tiêu này lên một tầm cao mới bằng cách phân tích khối lượng lớn dữ liệu trong thời gian thực. Chúng xác định các từ khóa tìm kiếm của người dùng và cung cấp quảng cáo cá nhân hóa. Điều này đảm bảo việc nhắm mục tiêu chính xác sẽ giữ cho các chiến dịch của bạn phù hợp với hành vi của khách hàng đang thay đổi. Một số khả năng nổi bật giúp AI agents tỏa sáng trong marketing bao gồm:\nAI agents là phần mềm tinh vi sử dụng AI cho các nhiệm vụ marketing phức tạp. Chúng tận dụng machine learning và natural language processing để phân tích dữ liệu và thực hiện các chiến lược một cách tự động. AI agents có khả năng thích ứng với các điều kiện thay đổi theo thời gian thực, không giống như các công cụ truyền thống. Chúng có thể phân tích hàng triệu tương tác của khách hàng trên nhiều kênh để tạo ra nội dung siêu cá nhân hóa trong tích tắc. AI agents xuất sắc trong phân tích dự đoán, dự báo các xu hướng và hành vi của khách hàng trong tương lai. Chúng biến đổi marketing nội dung, dịch vụ khách hàng và quảng cáo trả phí thông qua tự động hóa và tối ưu hóa. Các tính năng cốt lõi của AI agents trong marketing Như đã thảo luận trước đó, AI agents là các hệ thống thông minh tự động thực hiện các nhiệm vụ, thích ứng với các tình huống mới và đưa ra quyết định với sự can thiệp tối thiểu của con người. Nhưng điều gì làm cho chúng trở nên đặc biệt? Hãy cùng khám phá các tính năng giúp AI agents tự động trở nên đa dạng trong các ứng dụng marketing.\nTính tự chủ: AI agents hoạt động độc lập mà không cần sự can thiệp của con người. Điều này có nghĩa là bạn có thể sử dụng AI trong bất kỳ ứng dụng nào trong marketing. Nhận thức: AI agents thu thập dữ liệu thông qua các cảm biến hoặc phương thức đầu vào, chẳng hạn như văn bản, hình ảnh và âm thanh, để có một bức tranh hoàn chỉnh về môi trường của chúng cho tất cả các trường hợp sử dụng. Xử lý dữ liệu: Các thuật toán tiên tiến cho phép AI agents xử lý dữ liệu thông qua hiểu biết NLP hoặc nhận diện mẫu, phát hiện những thông tin có thể hành động để cung cấp sức mạnh cho AI agents trong marketing. Quyết định: Với những kinh nghiệm đã học hỏi và các mô hình xác suất, AI agents đánh giá các tùy chọn, điều chỉnh chiến lược và lựa chọn hành động để giải quyết các trường hợp sử dụng AI agents đang phát triển. Học hỏi và thích ứng: Machine learning cho phép AI agents tự động cải thiện, tinh chỉnh trải nghiệm của chúng và thích ứng với các thách thức trong thế giới thực. Giao tiếp: AI agents có thể giao tiếp với người dùng hoặc hệ thống thông qua hiểu biết ngôn ngữ tự nhiên (NLU) và nhận diện giọng nói để hợp tác một cách liền mạch. Nhận thức ngữ cảnh: Các AI agents duy trì ngữ cảnh của các nhiệm vụ hoặc cuộc trò chuyện và cung cấp các phản hồi tinh tế bằng cách sử dụng dữ liệu lịch sử, nâng cao hiệu suất trong marketing. Giám sát thời gian thực: Phân tích liên tục các dòng dữ liệu trực tiếp, AI agents phát hiện các bất thường và cung cấp các gợi ý kịp thời để tối ưu hóa việc ra quyết định và giải quyết vấn đề trong các hoạt động quan trọng. Lưu ý: Hãy luôn theo dõi hiệu suất của các AI agents để điều chỉnh và tối ưu hóa chúng theo thời gian. Việc cập nhật thường xuyên và phân tích dữ liệu sẽ giúp bạn nắm bắt được xu hướng mới và điều chỉnh chiến lược marketing của mình một cách hiệu quả.\n"},{"section":"Blog","slug":"/web-development/git/toi-uu-hoa-quy-trinh-thay-doi-co-so-du-lieu-voi-servicenow-va-gitops/","title":"Tối ưu hóa quy trình thay đổi cơ sở dữ liệu với ServiceNow và GitOps","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, Git","tags":"ServiceNow, GitOps, Quản lý cơ sở dữ liệu","content":"Tại sao nên chọn ServiceNow Nhiều tổ chức doanh nghiệp đã áp dụng ServiceNow như một nền tảng quản lý dịch vụ công nghệ thông tin (ITSM) tập trung. Các thay đổi trong cơ sở dữ liệu đòi hỏi quy trình phê duyệt vững chắc và khả năng kiểm toán toàn diện. ServiceNow đã trở thành tiêu chuẩn ngành để quản lý tất cả các loại phê duyệt, bao gồm cả những thay đổi cơ sở dữ liệu quan trọng có thể ảnh hưởng đến hoạt động kinh doanh.\nQuy trình thay đổi cơ sở dữ liệu truyền thống trong ServiceNow Quy trình truyền thống cho thay đổi cơ sở dữ liệu trong ServiceNow như sau:\nKhởi tạo yêu cầu: Người yêu cầu tạo một yêu cầu thay đổi trong ServiceNow, đính kèm các tập tin SQL dưới dạng TXT cùng với hướng dẫn thực hiện. Yêu cầu chính thức này ghi lại nhu cầu kinh doanh và chi tiết kỹ thuật của thay đổi cơ sở dữ liệu đề xuất. Xem xét và phê duyệt CAB: Hội đồng tư vấn thay đổi (CAB) đánh giá yêu cầu, xem xét các rủi ro tiềm ẩn, tác động kinh doanh và các yếu tố lịch trình. CAB có thể yêu cầu thêm thông tin hoặc sửa đổi trước khi phê duyệt. Giao tiếp giữa DBA và người yêu cầu: Quản trị viên cơ sở dữ liệu (DBA) giao tiếp với người yêu cầu qua các kênh như nhắn tin tức thì hoặc email để làm rõ yêu cầu hoặc tinh chỉnh các tập tin SQL. Điều này thường bao gồm nhiều trao đổi để đảm bảo tính chính xác kỹ thuật. Thực thi SQL: Sau khi hoàn thiện các tập tin SQL, DBA thực hiện chúng một cách thủ công trên cơ sở dữ liệu ứng dụng. Bước này yêu cầu chú ý đến từng chi tiết, vì DBA phải tuân theo các hướng dẫn đã được phê duyệt một cách chính xác. Đóng yêu cầu: DBA trở lại ServiceNow để đóng yêu cầu thay đổi, tài liệu hóa các chi tiết thực hiện, thời gian thực hiện và bất kỳ vấn đề nào gặp phải. Điều này hoàn tất dấu vết kiểm toán và cung cấp hồ sơ cho mục đích tuân thủ. Xác minh sau khi thực hiện: Mặc dù không được thể hiện rõ trong sơ đồ, người yêu cầu thường xác minh rằng các thay đổi cơ sở dữ liệu đạt được kết quả kinh doanh mong muốn, điều này có thể dẫn đến các yêu cầu thay đổi bổ sung nếu cần điều chỉnh. Phương pháp có cấu trúc này đảm bảo sự quản lý và tuân thủ nhưng thường gây ra sự chậm trễ do các chuyển giao thủ công và tạo ra cơ hội cho sự hiểu lầm giữa các bên liên quan kỹ thuật và kinh doanh.\nPhương pháp GitOps Mô hình GitOps cung cấp một phương pháp thay thế cho quản lý thay đổi cơ sở dữ liệu, tận dụng các thực tiễn tốt nhất trong phát triển phần mềm:\nThay đổi do nhà phát triển khởi xướng: Một nhà phát triển tạo một Pull Request (PR) chứa các tập tin SQL thay đổi cùng tài liệu liên quan. Điều này đặt các thay đổi cơ sở dữ liệu dưới cùng một hệ thống kiểm soát phiên bản như mã ứng dụng, cung cấp lịch sử và ngữ cảnh. Xem xét kỹ thuật: Một thành viên lãnh đạo kỹ thuật hoặc thành viên cấp cao trong nhóm xem xét PR, kiểm tra SQL để đảm bảo đúng đắn, tác động hiệu suất, và tuân thủ các tiêu chuẩn cơ sở dữ liệu. Phê duyệt và gộp PR: Khi được phê duyệt, PR sẽ được gộp, chính thức đưa các thay đổi vào mã nguồn. Triển khai tự động: Việc gộp tự động kích hoạt một pipeline CI/CD để triển khai các thay đổi SQL vào cơ sở dữ liệu mục tiêu. Pipeline này có thể bao gồm các biện pháp bảo vệ bổ sung như xác minh sơ đồ, kiểm tra tự động và chiến lược triển khai từng phần. Lợi thế chính của phương pháp này là tự động hóa hoàn toàn, giảm thiểu đáng kể công sức thủ công và lỗi của con người. Các thay đổi di chuyển từ phát triển đến sản xuất mà không cần can thiệp thủ công, rút ngắn thời gian giao hàng và đảm bảo tính đồng nhất giữa các môi trường. Thêm vào đó, tất cả các thay đổi đều được ghi lại vĩnh viễn trong lịch sử Git với tác giả và lý do rõ ràng.\nTuy nhiên, phương pháp GitOps cũng có những hạn chế:\nKhông giống như ServiceNow, cung cấp giao diện thân thiện với người dùng không quen thuộc với kỹ thuật, hệ thống kiểm soát phiên bản như GitHub chủ yếu vẫn là nền tảng hướng đến nhà phát triển. Các nhà lãnh đạo doanh nghiệp, nhân viên tuân thủ, và quản lý hoạt động thường thiếu tài khoản GitHub hoặc kiến thức kỹ thuật để đánh giá các tập tin SQL trong PR, tạo ra sự ngắt quãng giữa thực hiện kỹ thuật và quản lý doanh nghiệp. Dấu vết kiểm toán, mặc dù toàn diện từ góc độ kỹ thuật, có thể không đáp ứng yêu cầu tuân thủ của các ngành công nghiệp có quy định cao mà phụ thuộc vào các quy trình phê duyệt và khả năng kiểm toán được thiết kế riêng của ServiceNow. Các nhà cung cấp hệ thống kiểm soát phiên bản như GitHub đã nhận ra sự ngắt quãng này giữa quy trình làm việc của nhà phát triển và yêu cầu quản lý doanh nghiệp. Để đáp ứng, GitHub đã phát triển các khả năng tích hợp cho phép các tổ chức tận dụng những điểm mạnh của cả hai phương pháp thông qua ServiceNow GitHub Actions và quy tắc bảo vệ triển khai.\nQuy trình thay đổi cơ sở dữ liệu tối ưu Mình có thể kết hợp ServiceNow cho phê duyệt và GitHub cho GitOps để đạt được lợi ích tốt nhất của cả hai thế giới, tận dụng khả năng quản lý mạnh mẽ của ServiceNow cùng với quy trình thân thiện với nhà phát triển của GitHub. Quy trình tích hợp này có thể được cải tiến thêm bằng cách đưa vào Bytebase, công cụ cung cấp CI/CD cho cơ sở dữ liệu chuyên dụng.\nQuy trình tích hợp hoạt động như sau:\nNhà phát triển khởi xướng thay đổi: Một nhà phát triển tạo một Pull Request (PR) trong GitHub chứa các thay đổi cơ sở dữ liệu. Tích hợp tự động được kích hoạt: a. Một GitHub Action hoặc ứng dụng tùy chỉnh tạo một yêu cầu thay đổi trong ServiceNow, đảm bảo các yêu cầu quản lý được đáp ứng.\nb. Đồng thời, Bytebase SQL Review được kích hoạt để phân tích các tập tin SQL, cung cấp xác minh kỹ thuật tự động (Mẫu PR).\n3. Nhiều cổng phê duyệt được thực hiện:\na. Việc gộp PR bị chặn cho đến khi có kết quả từ Bytebase SQL review.\nb. Lãnh đạo kỹ thuật hoặc đồng nghiệp phải xem xét và phê duyệt PR trong GitHub.\nc. Quy trình phê duyệt ServiceNow, bao gồm xem xét CAB với các quản lý và bên liên quan, phải được hoàn thành. 4. Gộp PR: Khi tất cả các điều kiện tiên quyết được đáp ứng (Xem xét SQL, phê duyệt từ đồng nghiệp trong GitHub, và phê duyệt kinh doanh qua ServiceNow), PR sẽ được gộp. 5. Tạo quy trình triển khai: Việc gộp sẽ kích hoạt Bytebase GitHub Actions để tạo ra một quy trình triển khai.\n6. Quy tắc bảo vệ triển khai tùy chọn:\nHỗ trợ cụ thể của nhà cung cấp. GitHub cung cấp quy tắc bảo vệ triển khai. Azure DevOps cung cấp phê duyệt và kiểm tra pipeline.\na. Có thể thực hiện các biện pháp bảo vệ bổ sung yêu cầu phê duyệt triển khai thủ công từ lãnh đạo kỹ thuật.\nb. Phê duyệt ServiceNow có thể cần lại trong giai đoạn triển khai cho các môi trường quan trọng. 7. Triển khai thay đổi cơ sở dữ liệu: Sau khi tất cả các quy tắc bảo vệ triển khai được hoàn thành, Bytebase thực hiện việc triển khai thay đổi cơ sở dữ liệu.\nLợi ích của phương pháp tích hợp này là mỗi hệ thống thực hiện những gì mà nó làm tốt nhất. Bytebase, như một công cụ quản lý thay đổi cơ sở dữ liệu chuyên dụng, xuất sắc trong các nhiệm vụ cụ thể cho cơ sở dữ liệu mà cả GitHub và ServiceNow đều không thể cung cấp:\nTự động kiểm tra cú pháp SQL trong PR. Các khả năng thay đổi nâng cao được thiết kế riêng cho cơ sở dữ liệu, chẳng hạn như thay đổi hàng loạt, phát hiện sự trôi dạt sơ đồ, quay lại. Duy trì lịch sử thay đổi và dấu vết kiểm toán riêng biệt cho cơ sở dữ liệu, tạo ra một hồ sơ chuyên môn về tất cả các thay đổi sơ đồ và dữ liệu mà bổ sung cho tài liệu quản lý thay đổi rộng hơn của ServiceNow. Phương pháp kết hợp này giúp các quản trị viên và kỹ sư cơ sở dữ liệu có cái nhìn sâu sắc về sự phát triển của cơ sở dữ liệu trong khi vẫn duy trì các yêu cầu quản lý thông qua ServiceNow và quy trình thân thiện với nhà phát triển trong GitHub.\nVượt ra ngoài tự động hóa thay đổi cơ sở dữ liệu Ngoài việc bổ sung cho ServiceNow và GitHub để tự động hóa thay đổi cơ sở dữ liệu, Bytebase còn cung cấp một Trình chỉnh sửa SQL dựa trên web giúp kiểm soát quyền truy cập cơ sở dữ liệu Just-in-Time và áp dụng che giấu dữ liệu động khi truy vấn cơ sở dữ liệu. Như vậy, bạn có thể chuẩn hóa quy trình thay đổi và truy vấn cơ sở dữ liệu tại một nơi duy nhất.\n"},{"section":"Blog","slug":"/tin-cong-nghe/tuong-lai-cua-giao-thong-xe-bay-va-taxi-tren-khong/","title":"Tương Lai Của Giao Thông: Xe Bay Và Taxi Trên Không","description":"","date":"18 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ","tags":"Xe bay, Taxi trên không, Công nghệ eVTOL","content":"Tương Lai Của Giao Thông: Xe Bay Và Taxi Trên Không Mình muốn chia sẻ với các bạn một viễn cảnh tương lai nơi mà chúng ta không cần đường và những người bình thường như chúng ta có thể nhảy vào một chiếc pod điện cỡ thuyền và bay đi bất cứ đâu mà mình muốn. Mặc dù chúng ta đã hoàn thiện kỳ tích bay của con người trong hơn một thế kỷ qua, nhưng giao thông hàng không tức thì vẫn luôn bị gán cho thể loại khoa học viễn tưởng.\nTrong thập kỷ qua, nhiều công ty đã xuất hiện để giúp đưa xe bay và taxi trên không ra khỏi bầu không khí phép màu của Hollywood. Các công ty khởi nghiệp như Joby Aviation và Archer đang xây dựng các phương tiện eVTOL (electric vertical take-off and landing) có khả năng chở nhiều người trên không mà không tiêu tốn nhiên liệu độc hại. Giấc mơ taxi trên không đã đạt được một số cột mốc quy định: FAA đã thiết lập quy tắc.\nMặc dù các phương tiện này chưa hoàn toàn giống như những “chiếc xe bay” mà chúng ta đã tưởng tượng, nhưng đây là một lĩnh vực mới đang phát triển nhanh chóng với sự tham gia của những nhà sản xuất ô tô lớn như Toyota, Hyundai, Stellantis và nhiều công ty khác đang đầu tư vào các dự án của riêng họ hoặc vào một trong số các công ty khởi nghiệp.\nLĩnh vực này cũng không thiếu những drama và sự không chắc chắn, từ việc đấu tranh về “bằng sáng chế bị đánh cắp” đến những công ty đã không thể tồn tại, như Lilium và Kitty Hawk được tài trợ bởi Larry Page.\nHãy cùng mình theo dõi những thông tin mới nhất về taxi trên không nhé!\n"},{"section":"Blog","slug":"/tin-cong-nghe/ai-vao-nam-2025-cong-nghe-sinh-ra-robot-va-rui-ro-moi-noi/","title":"AI vào năm 2025: Công nghệ sinh ra, Robot và Rủi ro mới nổi","description":"","date":"12 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Tin công nghệ, AI","tags":"AI, Robot, An ninh mạng","content":"AI vào năm 2025: Công nghệ sinh ra, Robot và Rủi ro mới nổi Chào các bạn, hôm nay mình muốn chia sẻ về một chủ đề rất thú vị: sự phát triển của AI trong năm 2025. Trong năm vừa qua, AI đã mở rộng ranh giới của những gì có thể, với các ngành công nghiệp đua nhau tích hợp khả năng của nó để tăng năng suất và tự động hóa các nhiệm vụ phức tạp.\nTăng tốc trong phát triển AI Trong năm 2024, sự tiến bộ của AI đã diễn ra với tốc độ nhanh hơn nhiều so với các đổi mới công nghệ cao trước đó. Điều này đã tạo ra một môi trường đầy thách thức nhưng cũng đầy cơ hội cho các nhà phát triển và tổ chức. Tuy nhiên, với sự tiến bộ nhanh chóng này, rủi ro cũng gia tăng. Không có sự giám sát của con người, những sai lầm của AI có thể nghiêm trọng như những bước đột phá của nó.\nAI và Robot hình người AI và robot hình người đang bắt đầu thay đổi cách chúng ta tương tác với công nghệ. Đến năm 2025, chúng ta có thể mong đợi sự gia tăng trong việc áp dụng AI trong lĩnh vực robotics, tạo ra các mô hình robotics-as-a-service (RaaS) giúp giải pháp robot tiên tiến trở nên dễ tiếp cận hơn cho nhiều ngành công nghiệp.\nLời khuyên: Hãy chuẩn bị cho sự chuyển đổi này bằng cách tìm hiểu về các công nghệ AI hiện có và cách chúng có thể được áp dụng trong lĩnh vực của bạn.\nVai trò của AI trong An ninh mạng AI sẽ đóng vai trò ngày càng quan trọng trong chiến tranh mạng. Các công cụ AI và machine learning sẽ làm cho chiến tranh mạng trở nên nguy hiểm hơn, với thiệt hại bên ngoài các khu vực xung đột. Để bảo vệ dữ liệu và con người, các công nghệ như giao diện thần kinh và chip xác thực sẽ cần được phát triển.\nRủi ro và thách thức Mặc dù AI mang lại nhiều lợi ích, nhưng cũng cần phải chú ý đến các rủi ro liên quan. Các vấn đề như quyền riêng tư và bảo mật cần được giải quyết thông qua các quy định và tiêu chuẩn mới. Chúng ta cần một khung chính sách kết hợp công nghệ, chăm sóc sức khỏe và quy định về quyền riêng tư để bảo vệ người dùng.\nAI và giáo dục Cuối cùng, AI cũng đang định hình lại giáo dục. Học sinh và người dùng sẽ cần làm quen với việc sử dụng AI như một công cụ hỗ trợ thay vì là một giải pháp thay thế cho công việc sáng tạo của họ. Việc phát triển kỹ năng viết sẽ trở nên quan trọng trong mọi lĩnh vực.\nLưu ý: Hãy chủ động trong việc học hỏi và áp dụng các công nghệ mới, đồng thời phát triển những kỹ năng mềm cần thiết để làm việc hiệu quả trong một thế giới ngày càng tự động hóa.\nHy vọng rằng những thông tin này sẽ giúp các bạn có cái nhìn rõ hơn về tương lai của AI và những cơ hội cũng như thách thức mà nó mang lại.\n"},{"section":"Blog","slug":"/web-development/javascript/huong-dan-su-dung-promises-trong-javascript-de-tranh-callback-hell/","title":"Hướng dẫn Sử dụng Promises trong JavaScript để Tránh Callback Hell","description":"","date":"11 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"JavaScript, Web development, Frontend","tags":"JavaScript, Promises, callback hell","content":"🔍 Khái niệm về Promise Mình bắt đầu với khái niệm cơ bản về Promise trong JavaScript. Một Promise là một đối tượng đại diện cho việc hoàn thành hoặc thất bại của một thao tác bất đồng bộ trong tương lai. Điều này giúp code của chúng ta dễ đọc hơn và dễ dàng nối chuỗi các thao tác bất đồng bộ.\nMột Promise có ba trạng thái:\nPending - Trạng thái ban đầu, thao tác chưa hoàn tất. Fulfilled - Thao tác hoàn tất thành công. Rejected - Thao tác thất bại. const promise = new Promise((resolve, reject) =\u0026gt; { setTimeout(() =\u0026gt; { resolve(\u0026#34;Dữ liệu đã được lấy thành công!\u0026#34;); }, 2000); }); promise .then((data) =\u0026gt; console.log(data)) .catch((error) =\u0026gt; console.error(error)); 🚨 Callback Hell là gì? Trước khi có Promises, code bất đồng bộ thường dựa vào các callback lồng nhau, dẫn đến tình trạng gọi là callback hell - code lồng sâu và khó đọc. Để minh họa cho điều này, hãy xem ví dụ sau:\nfunction getUser(userId, callback) { setTimeout(() =\u0026gt; { console.log(\u0026#34;Đang lấy thông tin người dùng...\u0026#34;); callback({ id: userId, name: \u0026#34;Alice\u0026#34; }); }, 1000); } function getUserSettings(user, callback) { setTimeout(() =\u0026gt; { console.log(\u0026#34;Đang lấy cài đặt người dùng...\u0026#34;); callback({ theme: \u0026#34;dark\u0026#34;, notifications: true }); }, 1000); } // Ví dụ về callback hell getUser(1, (user) =\u0026gt; { getUserSettings(user, (settings) =\u0026gt; { console.log(settings); }); }); Cấu trúc này rất khó để gỡ lỗi và bảo trì. Promises giải quyết vấn đề này.\n✅ Sử dụng Promises để Tránh Callback Hell Bằng cách sử dụng Promises, chúng ta có thể làm phẳng cấu trúc lồng nhau thành một chuỗi promise dễ đọc hơn.\nfunction getUser(userId) { return new Promise((resolve) =\u0026gt; { setTimeout(() =\u0026gt; { console.log(\u0026#34;Người dùng đã được lấy\u0026#34;); resolve({ id: userId, name: \u0026#34;John\u0026#34; }); }, 1000); }); } function getPosts(user) { return new Promise((resolve) =\u0026gt; { setTimeout(() =\u0026gt; { console.log(\u0026#34;Các bài viết đã được lấy\u0026#34;); resolve([\u0026#34;Bài viết 1\u0026#34;, \u0026#34;Bài viết 2\u0026#34;]); }, 1000); }); } getUser(1) .then(getPosts) .then((posts) =\u0026gt; console.log(posts)) .catch((error) =\u0026gt; console.error(error)); 🔥 Async/Await: Cách Tiếp Cận Hiện Đại Cú pháp async/await được xây dựng trên nền tảng của promises và giúp mã bất đồng bộ trở nên dễ đọc hơn, gần giống như mã đồng bộ.\nasync function fetchUserData() { try { const user = await getUser(1); const posts = await getPosts(user); console.log(posts); } catch (error) { console.error(error); } } fetchUserData(); Tại sao nên sử dụng async/await?\nLoại bỏ cần thiết cho các chuỗi .then(). Dễ đọc và gỡ lỗi hơn. Quản lý lỗi tốt hơn với try/catch. 🚀 Best Practices khi Sử dụng Promises Luôn trả về một promise - Đảm bảo các hàm trả về promises để có thể nối chuỗi. Sử dụng .catch() hoặc try/catch - Xử lý lỗi một cách hợp lý trong các thao tác bất đồng bộ. Tránh lồng ghép .then() - Nối các promises để giữ cho mã sạch sẽ. Sử dụng Promise.all() cho thực thi song song - Thực thi nhiều promises đồng thời khi chúng độc lập. const fetchData = async () =\u0026gt; { const [user, posts] = await Promise.all([getUser(1), getPosts({})]); console.log(user, posts); }; ✨ Kết luận Promises đã cách mạng hóa lập trình bất đồng bộ trong JavaScript bằng cách cung cấp một cách có cấu trúc và dễ quản lý để xử lý các thao tác bất đồng bộ. Sử dụng chuỗi promise và async/await, các lập trình viên có thể viết mã bất đồng bộ sạch, dễ đọc và dễ bảo trì, đồng thời tránh được callback hell.\n💬 Bạn đã cải thiện mã bất đồng bộ của mình như thế nào khi sử dụng Promises? Chia sẻ kinh nghiệm của bạn trong các bình luận! 🚀\n"},{"section":"Blog","slug":"/web-development/security/so-sanh-oauth-va-jwt-cach-nao-bao-mat-api-cua-ban-tot-hon/","title":"So sánh OAuth và JWT: Cách nào bảo mật API của bạn tốt hơn?","description":"","date":"11 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"Web development, Frontend, Authentication, Security","tags":"OAuth, JWT, Authentication","content":"🤔 OAuth là gì? OAuth (Open Authorization) là một giao thức cho phép các ứng dụng bên thứ ba truy cập dữ liệu người dùng mà không cần tiết lộ thông tin đăng nhập. Nó giống như việc bạn đưa một khóa valet thay vì khóa xe của mình—bạn cấp quyền truy cập cụ thể mà không trao toàn quyền kiểm soát.\nVí dụ: Hãy tưởng tượng bạn muốn đăng nhập vào một trang web mới bằng tài khoản Google của mình. Thay vì cung cấp mật khẩu Google cho trang đó, OAuth cho phép Google xác thực bạn và cấp một token tạm thời mà chỉ cho phép truy cập hạn chế.\n🔐 JWT là gì? JWT (JSON Web Token) là một cách truyền tải thông tin giữa các bên một cách an toàn và gọn nhẹ. Hãy nghĩ về nó như một bao thư niêm phong chứa thông tin quan trọng—bất kỳ ai cũng có thể đọc nó, nhưng chỉ những bên được ủy quyền mới có thể xác minh tính xác thực của nó.\nVí dụ: Một vé xem phim với thông tin của bạn in trên đó giống như một JWT. Bạn trình vé tại cửa ra vào, và nếu nó hợp lệ, bạn được phép vào mà không cần rạp chiếu phim phải gọi lại hệ thống đặt vé.\n📌 Sự khác biệt chính: OAuth vs JWT Tính năng OAuth JWT Mục đích Ủy quyền Xác thực + Chuyển giao dữ liệu Loại token Access \u0026amp; Refresh Tokens Token tự chứa Trường hợp sử dụng Kiểm soát truy cập API (ví dụ, Đăng nhập Google) Xác thực không trạng thái (ví dụ, Đăng nhập một lần) Hết hạn \u0026amp; Làm mới Cần token làm mới Token hết hạn và cần cấp lại Mình mong muốn nghe trải nghiệm của bạn với OAuth và JWT. Hãy để lại ý kiến bên dưới nhé! 👇\n"},{"section":"Blog","slug":"/web-development/react/don-gian-hoa-react-hooks-usecallback/","title":"Đơn giản hóa React Hooks: useCallback","description":"","date":"10 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"React, Frontend, Web development","tags":"React, Lập trình, Hooks","content":"Giới thiệu React cung cấp nhiều hooks mạnh mẽ để quản lý trạng thái và tối ưu hiệu suất. Một trong số đó là useCallback, giúp ngăn chặn việc render lại không cần thiết trong các component chức năng.\nTrong bài viết này, mình sẽ khám phá chi tiết về useCallback, hiểu rõ lợi ích của nó và cách sử dụng nó hiệu quả với TypeScript.\nuseCallback là gì? Hook useCallback là một hook tích hợp sẵn trong React, trả về một phiên bản đã được memo hóa của một hàm callback. Nó ngăn chặn việc tạo lại hàm trừ khi một trong các dependency của nó thay đổi.\nĐiều này đặc biệt hữu ích khi truyền các hàm dưới dạng props cho các component con.\nCú pháp const memoizedCallback = useCallback( () =\u0026gt; { // logic hàm }, [dependencies], // Mảng dependencies ); Tại sao nên sử dụng useCallback? Việc sử dụng useCallback giúp tối ưu hiệu suất bằng cách đảm bảo rằng các hàm không bị tạo lại trong mỗi lần render. Điều này đặc biệt hữu ích khi:\nTruyền các hàm dưới dạng props cho các component con được memo hóa. Ngăn chặn việc render lại không cần thiết do sự thay đổi của danh tính hàm. Cải thiện hiệu suất trong các ứng dụng quy mô lớn. Ví dụ 1: Cách sử dụng cơ bản Hãy cùng xem một ví dụ đơn giản về cách useCallback ngăn chặn việc render lại không cần thiết.\nimport React, { useState, useCallback } from \u0026#34;react\u0026#34;; type ButtonProps = { handleClick: () =\u0026gt; void; }; const Button: React.FC\u0026lt;ButtonProps\u0026gt; = ({ handleClick }) =\u0026gt; { console.log(\u0026#34;Component Button đã render lại\u0026#34;); return \u0026lt;button onClick={handleClick}\u0026gt;Click Me\u0026lt;/button\u0026gt;; }; const MemoizedButton = React.memo(Button); const App: React.FC = () =\u0026gt; { const [count, setCount] = useState(0); const increment = useCallback(() =\u0026gt; { setCount((prev) =\u0026gt; prev + 1); }, []); return ( \u0026lt;div\u0026gt; \u0026lt;p\u0026gt;Count: {count}\u0026lt;/p\u0026gt; \u0026lt;MemoizedButton handleClick={increment} /\u0026gt; \u0026lt;/div\u0026gt; ); }; export default App; Giải thích:\nComponent Button được memo hóa bằng React.memo, chỉ render lại khi props của nó thay đổi. Hàm increment được bọc trong useCallback, đảm bảo rằng tham chiếu của nó vẫn ổn định trừ khi dependencies thay đổi. Điều này ngăn chặn việc render lại không cần thiết của component MemoizedButton. Ví dụ 2: useCallback với dependencies Nếu một hàm phụ thuộc vào trạng thái hoặc props bên ngoài, nó nên bao gồm chúng trong mảng dependencies.\nconst incrementByValue = useCallback( (value: number) =\u0026gt; { setCount((prev) =\u0026gt; prev + value); }, [setCount], ); Điều này đảm bảo rằng mỗi khi setCount thay đổi, tham chiếu hàm sẽ được cập nhật tương ứng.\nKhi nào không nên sử dụng useCallback Mặc dù useCallback rất hữu ích, nhưng việc sử dụng quá nhiều có thể dẫn đến sự phức tạp không cần thiết. Tránh sử dụng khi:\nHàm không gây ra render lại ở các component con. Hàm không được truyền dưới dạng props. Cải thiện hiệu suất không đáng kể. Kết luận useCallback là một hook mạnh mẽ giúp tối ưu hiệu suất trong các ứng dụng React bằng cách memo hóa các tham chiếu hàm. Khi được sử dụng đúng cách với TypeScript, nó không chỉ cải thiện hiệu suất mà còn tính khả dụng. Tuy nhiên, hãy sử dụng nó một cách khôn ngoan để tránh tối ưu hóa quá sớm.\n"},{"section":"Blog","slug":"/web-development/react/hieu-biet-ve-jsx-trong-react-cu-phap-va-thuc-hanh/","title":"Hiểu biết về JSX trong React: Cú pháp và Thực hành","description":"","date":"10 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"JSX, React, Frontend","tags":"JSX, React, Frontend","content":"Giới thiệu Khi bạn học React, việc nắm vững JSX là rất quan trọng. JSX là một tính năng mạnh mẽ của React cho phép bạn viết cú pháp giống như HTML trong JavaScript, giúp cho các thành phần React trở nên dễ đọc và dễ bảo trì hơn.\nJSX là gì? JSX (JavaScript XML) là một phần mở rộng cú pháp cho JavaScript cho phép bạn viết HTML bên trong JavaScript. Điều này giúp mã sạch hơn so với việc sử dụng React.createElement().\nVí dụ không sử dụng JSX:\nreturn ( React.createElement(\u0026#34;h1\u0026#34;, {}, \u0026#34;Hello, World!\u0026#34;); ); Ví dụ với JSX:\nreturn \u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;; Như bạn thấy, JSX làm cho mã trở nên sạch và dễ đọc hơn.\nNhững quy tắc quan trọng của JSX Để viết JSX tốt hơn, hãy nhớ những quy tắc sau:\n1. Cần phải có một phần tử cha Bạn phải bọc nhiều phần tử bên trong một phần tử cha duy nhất.\nSai:\nreturn ( \u0026lt;h1\u0026gt;Hello\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Welcome to React!\u0026lt;/p\u0026gt; ); Đúng:\nreturn ( \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;Hello\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Welcome to React!\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; ); 2. Viết biểu thức JavaScript bên trong {} Nếu bạn muốn viết bất kỳ biểu thức nào của JavaScript trong JSX, hãy bọc biểu thức JavaScript bên trong {}.\nVí dụ:\nconst name = \u0026#34;Shefali\u0026#34;; return \u0026lt;h1\u0026gt;Hello, {name}!\u0026lt;/h1\u0026gt;; 3. Tên thuộc tính phải sử dụng camelCase Trong JSX, bạn không thể viết thuộc tính theo kiểu HTML. Thay vào đó, bạn phải sử dụng định dạng camelCase.\nVí dụ: Thay vì viết onclick, hãy viết onClick.\n4. Styles inline là các đối tượng JavaScript Trong JSX, thuộc tính style sử dụng một đối tượng với các thuộc tính camelCase.\nVí dụ:\nconst styleObj = { color: \u0026#34;blue\u0026#34;, fontSize: \u0026#34;20px\u0026#34; }; return \u0026lt;p style={styleObj}\u0026gt;Styled Text\u0026lt;/p\u0026gt;; 5. Rendering có điều kiện trong JSX Sử dụng toán tử điều kiện hoặc \u0026amp;\u0026amp; cho các điều kiện.\nVí dụ với toán tử điều kiện:\nconst isLoggedIn = true; return \u0026lt;h1\u0026gt;{isLoggedIn ? \u0026#34;Welcome Back!\u0026#34; : \u0026#34;Please Sign In\u0026#34;}\u0026lt;/h1\u0026gt;; 6. Rendering danh sách trong JSX Sử dụng .map() để render danh sách và luôn cung cấp một thuộc tính key.\nVí dụ:\nconst names = [\u0026#34;Alice\u0026#34;, \u0026#34;Bob\u0026#34;, \u0026#34;Charlie\u0026#34;]; return ( \u0026lt;ul\u0026gt; {names.map((name) =\u0026gt; ( \u0026lt;li key={name}\u0026gt;{name}\u0026lt;/li\u0026gt; ))} \u0026lt;/ul\u0026gt; ); 7. Thuộc tính class là className trong JSX Trong HTML, bạn sử dụng class, nhưng trong JSX, bạn dùng className.\nVí dụ:\nreturn \u0026lt;h1 className=\u0026#34;heading\u0026#34;\u0026gt;Hello, JSX!\u0026lt;/h1\u0026gt;; 8. Các thẻ tự đóng phải có / Các phần tử tự đóng như \u0026lt;img\u0026gt; và \u0026lt;input\u0026gt; phải có một / trong JSX.\nVí dụ:\nreturn \u0026lt;img src=\u0026#34;image.jpg\u0026#34; alt=\u0026#34;Example\u0026#34; /\u0026gt;; Quy trình biên dịch JSX JSX không chạy trực tiếp trong trình duyệt. Trình biên dịch Babel chuyển đổi mã JSX thành React.createElement().\nMã JSX:\nreturn \u0026lt;h1\u0026gt;Hello, JSX!\u0026lt;/h1\u0026gt;; Babel chuyển đổi như sau:\nreturn ( React.createElement(\u0026#34;h1\u0026#34;, {}, \u0026#34;Hello, JSX!\u0026#34;); ); Điều này chứng minh rằng JSX chỉ là một cú pháp dễ hơn, giúp viết mã React dễ dàng hơn.\nKết luận Chúng ta đã điểm qua nhiều khía cạnh của JSX và cách sử dụng nó trong các thành phần chức năng. Hãy áp dụng những kiến thức này vào dự án của bạn để viết mã sạch hơn và hiệu quả hơn nhé! Nếu bạn có bất kỳ câu hỏi nào, đừng ngần ngại chia sẻ.\nChúc bạn học tập vui vẻ và tiếp tục lập trình!\n"},{"section":"Blog","slug":"/web-development/react/huong-dan-ket-noi-firebase-voi-react-js/","title":"Hướng Dẫn Kết Nối Firebase Với React JS","description":"","date":"10 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"React, Web development, Frontend, Firebase","tags":"Firebase, React, Frontend","content":"Giới thiệu Kết nối Firebase với React JS mở ra nhiều cơ hội để xây dựng các ứng dụng vừa động, vừa thân thiện với người dùng. Nếu bạn đang tìm kiếm cách tạo một ứng dụng web cập nhật theo thời gian thực, lưu trữ dữ liệu an toàn và mở rộng dễ dàng khi người dùng tăng lên, bạn có thể đã biết đến Firebase và React JS. Trong bài viết này, mình sẽ chia sẻ kinh nghiệm và cái nhìn của mình về cách kết hợp hai công cụ phổ biến này để tạo ra một ứng dụng mạnh mẽ và hiện đại.\nFirebase là gì? Firebase là một nền tảng phát triển bởi Google, cung cấp nhiều dịch vụ hỗ trợ trong việc xây dựng, cải thiện và phát triển ứng dụng của bạn. Nó bao gồm các công cụ cho xác thực, cơ sở dữ liệu theo thời gian thực, lưu trữ đám mây, hosting, và nhiều hơn nữa. Đặc điểm nổi bật của Firebase là khả năng xử lý backend cho ứng dụng của bạn trong khi bạn có thể tập trung vào trải nghiệm frontend.\nReact JS là gì? React JS là một thư viện JavaScript giúp xây dựng giao diện người dùng một cách dễ dàng. Nó nổi tiếng với kiến trúc dựa trên thành phần, cho phép bạn chia nhỏ giao diện người dùng thành các phần dễ quản lý. Mỗi thành phần xử lý trạng thái và logic của riêng nó, giúp việc xây dựng ứng dụng phức tạp trở nên đơn giản hơn.\nLợi ích của việc sử dụng Firebase với React Kết hợp Firebase và React giống như ghép một động cơ mạnh mẽ với một thân hình hiện đại. Dưới đây là một số lợi ích của sự kết hợp này:\nCập nhật theo thời gian thực: Cơ sở dữ liệu theo thời gian thực của Firebase cho phép ứng dụng của bạn cập nhật dữ liệu ngay lập tức. Khả năng mở rộng: Khi ứng dụng của bạn phát triển, Firebase cũng mở rộng cùng bạn. Phát triển đơn giản hóa: Firebase cung cấp nhiều giải pháp có sẵn cho các tác vụ như xác thực và lưu trữ dữ liệu. Hỗ trợ đa nền tảng: Firebase không chỉ dành cho ứng dụng web; nó cũng hỗ trợ ứng dụng di động và máy tính để bàn. Bảo mật: Với các tính năng bảo mật tích hợp, Firebase giúp bảo vệ dữ liệu người dùng một cách an toàn. Cách kết nối Firebase với React JS Dưới đây là hướng dẫn đơn giản để bạn kết nối Firebase với ứng dụng React của mình:\n1. Thiết lập dự án Firebase Tạo tài khoản Firebase: Bắt đầu bằng cách đăng ký tài khoản tại Firebase Console. Tạo dự án mới: Khi bạn đã đăng nhập, hãy tạo một dự án mới. Firebase sẽ hướng dẫn bạn qua quy trình thiết lập. Thêm ứng dụng web: Sau khi dự án đã sẵn sàng, hãy thêm một ứng dụng web mới. Firebase sẽ cung cấp cho bạn một đối tượng cấu hình chứa các khóa và định danh cho ứng dụng của bạn. 2. Cài đặt Firebase trong ứng dụng React Nếu bạn đã có một ứng dụng React, hãy mở terminal trong thư mục dự án và chạy lệnh sau:\nnpm install firebase Nếu bạn đang sử dụng yarn, bạn có thể chạy:\nyarn add firebase 3. Cấu hình Firebase trong ứng dụng React Tạo một tệp mới trong dự án của bạn (ví dụ, firebaseConfig.js) và dán cấu hình Firebase vào đó. Tệp sẽ có dạng như sau:\n// firebaseConfig.js import { initializeApp } from \u0026#34;firebase/app\u0026#34;; const firebaseConfig = { apiKey: \u0026#34;YOUR_API_KEY\u0026#34;, authDomain: \u0026#34;YOUR_AUTH_DOMAIN\u0026#34;, projectId: \u0026#34;YOUR_PROJECT_ID\u0026#34;, storageBucket: \u0026#34;YOUR_STORAGE_BUCKET\u0026#34;, messagingSenderId: \u0026#34;YOUR_MESSAGING_SENDER_ID\u0026#34;, appId: \u0026#34;YOUR_APP_ID\u0026#34;, }; const app = initializeApp(firebaseConfig); export default app; Thay thế các giá trị giữ chỗ bằng thông tin cấu hình thực tế từ dự án Firebase của bạn.\n4. Sử dụng dịch vụ Firebase trong các thành phần của bạn Bây giờ, bạn có thể bắt đầu sử dụng các dịch vụ của Firebase trong các thành phần React của mình. Ví dụ, nếu bạn muốn sử dụng Firebase Authentication hoặc Firestore, bạn có thể nhập các hàm cần thiết vào thành phần của mình và sử dụng chúng.\nVí dụ sau đây cho thấy cách lấy dữ liệu từ Firestore:\n// ExampleComponent.js import React, { useEffect, useState } from \u0026#34;react\u0026#34;; import { getFirestore, collection, getDocs } from \u0026#34;firebase/firestore\u0026#34;; import app from \u0026#34;./firebaseConfig\u0026#34;; const db = getFirestore(app); const ExampleComponent = () =\u0026gt; { const [data, setData] = useState([]); useEffect(() =\u0026gt; { const fetchData = async () =\u0026gt; { const querySnapshot = await getDocs(collection(db, \u0026#34;your-collection\u0026#34;)); const items = []; querySnapshot.forEach((doc) =\u0026gt; { items.push({ id: doc.id, ...doc.data() }); }); setData(items); }; fetchData(); }, []); return ( \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;Dữ liệu từ Firestore\u0026lt;/h2\u0026gt; {data.map((item) =\u0026gt; ( \u0026lt;div key={item.id}\u0026gt; \u0026lt;p\u0026gt;{item.name}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; ))} \u0026lt;/div\u0026gt; ); }; export default ExampleComponent; Ví dụ này cho thấy cách lấy dữ liệu từ một bộ sưu tập Firestore và hiển thị nó trong thành phần React của bạn. Hãy điều chỉnh mã cho phù hợp với cấu trúc dự án của bạn.\nNhững thách thức thường gặp và giải pháp Dù có hướng dẫn rõ ràng, bạn có thể gặp một số thách thức. Dưới đây là một số vấn đề phổ biến và mẹo giải quyết:\nCấu hình không chính xác: Kiểm tra lại cấu hình Firebase của bạn. Bất kỳ lỗi chính tả nào trong các khóa cũng có thể ngăn ứng dụng của bạn kết nối với Firebase. Xung đột phiên bản: Đôi khi, các bản cập nhật cho Firebase hoặc React có thể gây ra vấn đề tương thích. Luôn tham khảo tài liệu mới nhất để được hướng dẫn. Vấn đề CORS: Nếu bạn gặp lỗi CORS, hãy kiểm tra các quy tắc bảo mật Firebase của bạn và điều chỉnh cho phù hợp. Lỗi xác thực: Khi sử dụng Firebase Authentication, hãy đảm bảo bạn tuân thủ các thực hành tốt nhất cho việc quản lý khóa an toàn. Câu hỏi thường gặp (FAQs) Tôi có cần lo lắng về bảo mật nếu tôi công khai các khóa API của Firebase không? Firebase API keys không phải là bí mật và an toàn để bạn để trong code của bạn. Bảo mật thực sự đến từ việc cấu hình các rules và permissions của Firebase đúng cách. Tôi có thể sử dụng Firebase với các framework JavaScript khác không? Có, Firebase có thể tích hợp với các framework khác như Angular hoặc Vue.js. Quy trình tương tự và tài liệu cung cấp ví dụ cho các thiết lập khác nhau. Tôi nên quản lý các bản cập nhật khi Firebase phát hành phiên bản mới như thế nào? Bạn nên kiểm tra ghi chú phát hành của Firebase và cập nhật các phụ thuộc thường xuyên. Điều này giúp đảm bảo rằng dự án của bạn vẫn an toàn và tận dụng được các tính năng mới. Có chi phí nào liên quan đến việc sử dụng Firebase không? Firebase cung cấp một gói miễn phí với giới hạn hào phóng cho các dự án nhỏ. Khi ứng dụng của bạn phát triển, bạn có thể phát sinh chi phí, vì vậy hãy xem xét chi tiết về chi phí của Firebase. Tài liệu tham khảo Tài liệu Firebase: Tài liệu chính thức của Firebase là một tài nguyên tuyệt vời cho các hướng dẫn chi tiết và mẹo khắc phục sự cố. Tài liệu React: Để biết thêm thông tin về React, trang React Official Site có các hướng dẫn và tài liệu hữu ích. Khóa học và hướng dẫn: Các trang web như freeCodeCamp và Codecademy cung cấp các khóa học có thể giúp bạn nâng cao kiến thức về Firebase và React. Diễn đàn cộng đồng: Các nền tảng như Stack Overflow và Reddit’s r/reactjs cung cấp không gian để hỏi đáp và chia sẻ thông tin với các nhà phát triển khác. Kết luận Kết nối Firebase với React JS có thể là một trải nghiệm thú vị và bổ ích. Quy trình có thể có vẻ áp đảo lúc đầu, nhưng khi được chia nhỏ thành các bước nhỏ sẽ dễ dàng hơn rất nhiều. Mình khuyến khích bạn hãy dành thời gian, làm theo tài liệu và thử nghiệm với mã để xem điều gì phù hợp nhất cho dự án của bạn.\n"},{"section":"Blog","slug":"/web-development/react/huong-dan-tao-sitemap-xml-trong-react-js/","title":"Hướng Dẫn Tạo Sitemap.xml Trong React JS","description":"","date":"10 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"React, Frontend, Web development, SEO","tags":"Sitemap, React, SEO","content":"Giới Thiệu Khi bắt đầu xây dựng ứng dụng web với React, mình nhanh chóng nhận ra rằng một thiết kế đẹp và các tính năng tương tác không đủ để tiếp cận đối tượng rộng lớn hơn. Các công cụ tìm kiếm như Google cần một lộ trình rõ ràng để thu thập và lập chỉ mục từng trang trong ứng dụng của mình, và đây chính là lý do sitemap.xml trở nên quan trọng.\nSitemap là danh sách tất cả các trang trên website mà mình muốn các công cụ tìm kiếm biết đến. Hướng dẫn này sẽ chỉ cho mình cách thiết lập sitemap cho một dự án React, đảm bảo mọi trang đều được phát hiện bởi các công cụ tìm kiếm và cải thiện SEO cho trang web của mình.\nSitemap là gì? Sitemap.xml là một tệp danh sách các URL cho một trang web. Nó giúp các công cụ tìm kiếm biết về cấu trúc của website để tìm và lập chỉ mục nội dung nhanh hơn. Hãy nghĩ về nó như một bảng mục lục cho internet. Google, Bing và các công cụ tìm kiếm khác dựa vào sitemap để đảm bảo họ có tất cả các trang mới nhất, đặc biệt nếu trang web được xây dựng bằng các công nghệ phía client như React. Theo tài liệu của Google, một sitemap được cấu trúc tốt có thể giúp các công cụ tìm kiếm phát hiện và xếp hạng các trang hiệu quả hơn.\nTại sao Sitemap lại quan trọng cho ứng dụng React của mình? Các ứng dụng React thường được xây dựng như các ứng dụng một trang (SPA) hoặc sử dụng định tuyến phía client. Không phải tất cả các URL đều có sẵn dưới dạng tệp HTML tĩnh mặc định. Do đó, các công cụ tìm kiếm có thể bỏ lỡ một số trang nếu mình không hướng dẫn chúng đúng cách. Một sitemap giúp giải quyết điều này bằng cách:\nNâng cao khả năng thu thập thông tin: Cung cấp cho các công cụ tìm kiếm danh sách tất cả các trang, đảm bảo không bỏ sót điều gì quan trọng. Cải thiện lập chỉ mục: Một sitemap rõ ràng tăng khả năng các trang của mình được lập chỉ mục chính xác, điều này có thể nâng cao khả năng hiển thị của trang web. Xử lý các tuyến đường động: Đối với các ứng dụng tạo ra trang động, sitemap đảm bảo nội dung được tạo động cũng có thể được phát hiện. Hỗ trợ SEO: Một sitemap chính xác có thể gián tiếp cải thiện vị trí tìm kiếm của mình bằng cách đảm bảo tất cả nội dung đều có thể tiếp cận và được thu thập thông tin. Đối với nhiều trang web, một sitemap được xây dựng tốt là một phần của chiến lược SEO rộng hơn. Thực tế, các trang có sitemap được triển khai đúng cách thường thấy lưu lượng truy cập tự nhiên tốt hơn. Mình đã nhận thấy rằng việc thêm bước này có thể tạo ra sự khác biệt đáng kể khi phân tích hiệu suất trang web của mình bằng các công cụ như Google Search Console.\nCác bước để tạo Sitemap.xml trong React JS Hãy để mình hướng dẫn qua một quy trình đơn giản để tạo sitemap cho ứng dụng React.\nCó một số phương pháp khác nhau, nhưng mình sẽ tập trung vào một trong những cách phổ biến nhất sử dụng một gói npm.\n1. Cài đặt package tạo Sitemap Một cách mà mình xử lý việc này là sử dụng package như react-router-sitemap. Package này hoạt động tốt nếu mình đang sử dụng React Router để quản lý điều hướng của ứng dụng. Để cài đặt, mình chỉ cần chạy:\nnpm install react-router-sitemap --save-dev Nếu mình không sử dụng React Router hoặc muốn một cách tiếp cận tùy chỉnh hơn, một lựa chọn tốt khác là package sitemap có sẵn trên npm.\n2. Cấu hình các Route của bạn Đối với phương pháp react-router-sitemap, mình cần đảm bảo rằng các route được định nghĩa đúng trong dự án React của mình. Dưới đây là một ví dụ về cách cấu hình các route cơ bản:\nimport React from \u0026#34;react\u0026#34;; import { BrowserRouter, Route, Switch } from \u0026#34;react-router-dom\u0026#34;; import Home from \u0026#34;./pages/Home\u0026#34;; import About from \u0026#34;./pages/About\u0026#34;; import Contact from \u0026#34;./pages/Contact\u0026#34;; const Routes = () =\u0026gt; ( \u0026lt;BrowserRouter\u0026gt; \u0026lt;Switch\u0026gt; \u0026lt;Route exact path=\u0026#34;/\u0026#34; component={Home} /\u0026gt; \u0026lt;Route path=\u0026#34;/about\u0026#34; component={About} /\u0026gt; \u0026lt;Route path=\u0026#34;/contact\u0026#34; component={Contact} /\u0026gt; \u0026lt;/Switch\u0026gt; \u0026lt;/BrowserRouter\u0026gt; ); export default Routes; Mình sau đó tạo một tệp riêng cho việc tạo sitemap, ví dụ, sitemap-generator.js:\nconst router = require(\u0026#34;./src/routes\u0026#34;).default; const Sitemap = require(\u0026#34;react-router-sitemap\u0026#34;).default; function generateSitemap() { return new Sitemap(router) .build(\u0026#34;https://www.yourwebsite.com\u0026#34;) .save(\u0026#34;./public/sitemap.xml\u0026#34;); } generateSitemap(); Chạy script này (bằng cách thêm một mục script trong package.json) sẽ tạo ra sitemap.xml trong thư mục public của mình, sẵn sàng cho các công cụ tìm kiếm.\n3. Tự động hóa quy trình Mình thích tự động hóa việc cập nhật sitemap. Bằng cách tích hợp script tạo sitemap vào lệnh build của mình, mình đảm bảo rằng mỗi lần deploy version mới của ứng dụng, sitemap phản ánh cấu trúc hiện tại. Điều này đặc biệt hữu ích khi ứng dụng của mình có các cập nhật thường xuyên hoặc nội dung động.\nĐể làm điều này, mình thêm một bước xây dựng trong package.json:\n\u0026#34;scripts\u0026#34;: { \u0026#34;build\u0026#34;: \u0026#34;react-scripts build \u0026amp;\u0026amp; node sitemap-generator.js\u0026#34; } Điều này đảm bảo rằng sau khi chạy lệnh build, sitemap sẽ tự động được cập nhật.\n4. Review và submit sitemap của bạn Khi sitemap được tạo, mình kiểm tra nó bằng cách mở tệp trong trình duyệt. Nó sẽ liệt kê tất cả các URL theo định dạng XML có cấu trúc. Tiếp theo, mình submit sitemap đến Google Search Console và Bing Webmaster Tools. Bước này xác nhận rằng các công cụ tìm kiếm có thể truy cập và xử lý tệp đúng cách. Hỗ trợ của Google có hướng dẫn chi tiết về cách thực hiện điều này.\nCâu hỏi thường gặp (FAQs) Sitemap.xml thực sự làm gì? Sitemap.xml là một lộ trình cho các công cụ tìm kiếm. Nó liệt kê các URL của một trang web để các công cụ tìm kiếm có thể tìm và lập chỉ mục tất cả các trang dễ dàng. Nó đặc biệt hữu ích cho các trang có nội dung động hoặc các trang được render từ phía client.\nMình có thực sự cần một sitemap cho ứng dụng React không? Có! Các ứng dụng React thường dựa vào router phía client, điều này có thể ẩn một số trang khỏi các công cụ tìm kiếm. Một sitemap đảm bảo rằng mọi trang đều được biết đến và có thể được thu thập thông tin, dẫn đến khả năng hiển thị tốt hơn trong kết quả tìm kiếm.\nMình nên sử dụng package nào để tạo sitemap? Mình đã có trải nghiệm tốt với cả package react-router-sitemap và package sitemap. Lựa chọn phụ thuộc vào cấu hình router của bạn. Nếu bạn đang sử dụng React Router thì react-router-sitemap là phù hợp. Đối với nhiều kiểm soát hoặc các hệ thống router khác, gói sitemap là ổn nhất.\nMình nên cập nhật sitemap bao lâu một lần? Mình cập nhật sitemap mỗi khi xây dựng và deploy phiên bản mới của ứng dụng. Bằng cách này, sitemap luôn phản ánh cấu trúc hiện tại. Nếu nội dung của bạn thay đổi thường xuyên hơn, hãy xem xét việc thiết lập một quy trình tự động để tái tạo sitemap theo lịch.\nNếu sitemap.xml của mình không hoạt động đúng cách thì sao? Nếu có vấn đề, mình khuyên bạn nên kiểm tra cấu hình các routes của bạn và đảm bảo rằng các URL là hợp lệ. Ngoài ra, các công cụ như Google Search Console có thể cung cấp phản hồi về các lỗi được tìm thấy trong sitemap. Theo tài liệu của gói tạo sitemap thường giúp giải quyết vấn đề nhanh chóng.\nTham khảo thêm Để có hướng dẫn chi tiết hơn và giúp đỡ về chủ đề này, mình đã tập hợp một số liên kết hữu ích:\nHướng dẫn của Google về Sitemap:\nGoogle Search Central – Tổng quan về Sitemap\nTrang này giải thích sitemap là gì và tại sao chúng lại quan trọng.\nPackage React Router Sitemap:\nreact-router-sitemap trên GitHub\nDành cho React Router để quản lý các routes của mình.\nPackage Sitemap trên npm:\ngói sitemap npm\nĐể có một cách tiếp cận linh hoạt hơn để tạo sitemap.\nGoogle Search Console support:\nGoogle Search Console – Gửi Sitemap\nHướng dẫn về cách gửi sitemap của bạn và kiểm tra các lỗi.\nThực hành SEO tốt nhất:\nHướng dẫn dành cho người mới bắt đầu về SEO của Moz\nMột hướng dẫn thân thiện và toàn diện để hiểu các khái niệm cơ bản về SEO.\nMình thấy rằng những tài nguyên này không chỉ giúp mình khắc phục bất kỳ vấn đề nào mà còn cung cấp một hiểu biết sâu sắc hơn về cách các công cụ tìm kiếm hoạt động. Kiến thức này cuối cùng giúp mình xây dựng các ứng dụng web tốt hơn và dễ tiếp cận hơn.\nKết Luận Việc tạo sitemap.xml cho ứng dụng React JS có thể có vẻ như một chi tiết nhỏ, nhưng nó tạo ra sự khác biệt lớn trong việc các công cụ tìm kiếm tìm thấy và lập chỉ mục trang web của mình dễ dàng hơn. Mình đã chia sẻ các bước mà mình thực hiện, từ việc cài đặt gói phù hợp đến tự động hóa quy trình trong quá trình xây dựng, cùng với một số tài nguyên hữu ích và câu trả lời cho các câu hỏi thường gặp.\nDành thời gian để thiết lập một sitemap đúng cách có thể giúp ngăn chặn nhiều rắc rối sau này, đặc biệt khi ứng dụng của mình phát triển và tiến hóa. Mình hy vọng rằng hướng dẫn này giúp bạn rõ ràng và đơn giản để bắt đầu với việc tạo sitemap.xml cho dự án React của bạn.\n"},{"section":"Blog","slug":"/web-development/react/so-sanh-react-query-va-swr-lua-chon-nao-tot-nhat-vao-nam-2025/","title":"So sánh React Query và SWR: Lựa chọn nào tốt nhất vào năm 2025?","description":"","date":"10 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"React, Frontend, State management","tags":"React, SWR, React Query","content":"Khi xây dựng ứng dụng React hiện đại Mình muốn bắt đầu bằng việc nhấn mạnh rằng việc lấy và lưu trữ dữ liệu hiệu quả là rất quan trọng cho hiệu suất và trải nghiệm người dùng. Vào năm 2025, React Query và SWR vẫn là hai lựa chọn phổ biến nhất cho việc quản lý trạng thái server trong React. Vậy, cái nào là lựa chọn tốt nhất cho dự án của bạn?\nMình sẽ so sánh React Query và SWR dựa trên các tính năng, hiệu suất, trường hợp sử dụng và ví dụ thực tế. Cuối cùng, bạn sẽ có cái nhìn rõ ràng về thư viện nào phù hợp nhất với nhu cầu của mình.\nWhat is React Query? React Query là một thư viện mạnh mẽ giúp lấy dữ liệu và quản lý trạng thái, đơn giản hóa việc xử lý dữ liệu bất đồng bộ trong ứng dụng React. Nó cung cấp các tính năng như caching, đồng bộ hóa nền, phân trang và cập nhật lạc quan.\nCác tính năng chính của React Query:\n✅ Caching tự động – Không cần phải lưu trữ phản hồi thủ công. ✅ Đồng bộ hóa nền – Giữ dữ liệu luôn mới bằng cách lấy lại dữ liệu trong nền. ✅ Cập nhật lạc quan – Cập nhật ngay giao diện người dùng trước khi máy chủ xác nhận các thay đổi. ✅ Quản lý phân trang \u0026amp; truy vấn vô hạn – Lấy dữ liệu theo từng khối một cách hiệu quả. ✅ Quản lý biến đổi – Xử lý các thao tác POST, PUT, DELETE một cách liền mạch. Ví dụ về React Query:\nimport { useQuery, useMutation, QueryClient, QueryClientProvider, } from \u0026#34;react-query\u0026#34;; const queryClient = new QueryClient(); function fetchPosts() { return fetch(\u0026#34;https://jsonplaceholder.typicode.com/posts\u0026#34;).then((res) =\u0026gt; res.json(), ); } function Posts() { const { data, error, isLoading } = useQuery(\u0026#34;posts\u0026#34;, fetchPosts); if (isLoading) return \u0026lt;p\u0026gt;Loading...\u0026lt;/p\u0026gt;; if (error) return \u0026lt;p\u0026gt;Error loading data!\u0026lt;/p\u0026gt;; return ( \u0026lt;ul\u0026gt; {data.map((post) =\u0026gt; ( \u0026lt;li key={post.id}\u0026gt;{post.title}\u0026lt;/li\u0026gt; ))} \u0026lt;/ul\u0026gt; ); } export default function App() { return ( \u0026lt;QueryClientProvider client={queryClient}\u0026gt; \u0026lt;Posts /\u0026gt; \u0026lt;/QueryClientProvider\u0026gt; ); } What is SWR? SWR (Stale-While-Revalidate) là một thư viện lấy dữ liệu nhẹ được phát triển bởi Vercel. Nó tập trung vào hiệu suất bằng cách lưu cache dữ liệu và lấy lại dữ liệu trong nền để mang lại trải nghiệm người dùng liền mạch.\nCác tính năng chính của SWR:\n✅ Nhanh và nhẹ – Kích thước gói nhỏ hơn so với React Query. ✅ Stale-while-revalidate – Hiển thị dữ liệu cache trước, sau đó cập nhật trong nền. ✅ **Tự động retry – Retry các yêu cầu thất bại. ✅ Hỗ trợ SSR và Suspense – Làm việc tốt với Next.js. ✅ Hàm fetcher tích hợp sẵn – Sử dụng native fetch để đơn giản hóa. Ví dụ về SWR:\nimport useSWR from \u0026#34;swr\u0026#34;; const fetcher = (url) =\u0026gt; fetch(url).then((res) =\u0026gt; res.json()); function Posts() { const { data, error, isLoading } = useSWR( \u0026#34;https://jsonplaceholder.typicode.com/posts\u0026#34;, fetcher, ); if (isLoading) return \u0026lt;p\u0026gt;Loading...\u0026lt;/p\u0026gt;; if (error) return \u0026lt;p\u0026gt;Error loading data!\u0026lt;/p\u0026gt;; return ( \u0026lt;ul\u0026gt; {data.map((post) =\u0026gt; ( \u0026lt;li key={post.id}\u0026gt;{post.title}\u0026lt;/li\u0026gt; ))} \u0026lt;/ul\u0026gt; ); } export default function App() { return \u0026lt;Posts /\u0026gt;; } Khi nào nên sử dụng React Query? Sử dụng React Query nếu:\nỨng dụng của bạn yêu cầu quản lý trạng thái phức tạp (CRUD, caching, mutations). Bạn cần tính năng phân trang, cuộn vô hạn hoặc cập nhật lạc quan. Bạn đang xây dựng một ứng dụng quy mô lớn với dữ liệu động. Khi nào nên sử dụng SWR? Sử dụng SWR nếu:\nBạn muốn một giải pháp nhẹ cho việc lấy dữ liệu đơn giản. Ứng dụng của bạn chủ yếu đọc dữ liệu mà không có nhiều biến đổi. Bạn đang sử dụng Next.js và cần hỗ trợ SSR liền mạch. Cả React Query và SWR đều là những lựa chọn tuyệt vời cho việc quản lý trạng thái server trong ứng dụng React. Hiểu rõ những điểm mạnh và hạn chế của chúng sẽ giúp bạn đưa ra quyết định tốt nhất cho dự án của mình.\nBạn thích thư viện nào hơn vào năm 2025? Hãy cho mình biết trong phần bình luận nhé! 😊\nNếu bạn thích bài viết này, hãy theo dõi mình để nhận thêm nhiều mẹo và thủ thuật hữu ích nhé! 🚀\n"},{"section":"Blog","slug":"/web-development/react/tuong-lai-cua-react-lua-chon-thay-the-cho-create-react-app/","title":"Tương lai của React: Lựa chọn thay thế cho Create React App","description":"","date":"10 tháng 3, 2025","image":null,"imageSM":null,"searchKeyword":"","categories":"React, Frontend, Web development","tags":"React, Lập trình, Frontend","content":"Giới thiệu Mình muốn chia sẻ với các bạn về việc Create React App (CRA) đã không còn được duy trì nữa kể từ React 18. Nếu bạn vẫn đang sử dụng CRA, hãy cùng mình khám phá những lựa chọn thay thế tốt hơn, giúp cải thiện hiệu suất và trải nghiệm phát triển.\nTại sao CRA bị ngừng hỗ trợ? CRA đã bị ngừng hỗ trợ vì một số lý do chính:\nTốc độ phát triển chậm: CRA sử dụng Webpack, mặc dù mạnh mẽ, nhưng không tối ưu cho tốc độ. Các công cụ hiện đại như Vite sử dụng ESBuild, cho phép thay thế module nóng (HMR) gần như ngay lập tức, làm cho quá trình phát triển nhanh hơn.\nKích thước gói lớn: Mặc định, CRA tạo ra các gói JavaScript lớn, dẫn đến thời gian tải chậm hơn. Các công cụ như Vite và Next.js tối ưu hóa đầu ra cho hiệu suất tốt hơn.\nThiếu bảo trì: Nhóm phát triển React đã ngừng bảo trì CRA, điều này có nghĩa là nó sẽ không nhận được các bản cập nhật cần thiết.\nCó nhiều lựa chọn tốt hơn: Những công cụ như Vite và Next.js hiện đã trở thành lựa chọn ưu việt hơn, mang lại trải nghiệm phát triển tốt hơn và các tính năng hiện đại.\nNhững lựa chọn thay thế tốt nhất cho CRA Nếu bạn đang bắt đầu một dự án mới, hãy xem xét các lựa chọn sau:\n1. Vite - Lựa chọn thay thế tốt nhất cho CRA\nTại sao? Khởi động nhanh và HMR đáng kinh ngạc.\nTrường hợp sử dụng: Tốt nhất cho các ứng dụng SPA (Single Page Applications).\nLệnh tạo dự án mới:\nnpm create vite@latest my-app --template react cd my-app npm install npm run dev 2. Next.js - Khung React Full-Stack\nTại sao? Hỗ trợ SSR (Server-Side Rendering) \u0026amp; SSG (Static Site Generation).\nTrường hợp sử dụng: Lý tưởng cho các ứng dụng thân thiện với SEO và các dự án full-stack.\nLệnh tạo dự án mới:\nnpx create-next-app@latest my-app cd my-app npm run dev Một số lựa chọn thay thế khác là Parcel và Remix.\nNếu bạn có một dự án CRA hiện tại thì sao? Nếu dự án của bạn vẫn sử dụng CRA, hãy cân nhắc việc chuyển đổi sang Vite hoặc Next.js. Bạn có thể:\nSử dụng các công cụ như Hướng dẫn chuyển đổi CRA sang Vite để thực hiện quá trình chuyển đổi một cách suôn sẻ. Thực hiện việc cấu hình lại thủ công nếu cần thiết. Kết luận Việc ngừng hỗ trợ CRA đánh dấu một bước chuyển mình mạnh mẽ về phía các công cụ xây dựng hiện đại, hiệu quả hơn cho phát triển React. Dù bạn chọn Vite để có tốc độ, Next.js cho khả năng full-stack, hay Remix cho các tiêu chuẩn web, việc chuyển đổi sẽ nâng cao quy trình làm việc và cải thiện hiệu suất ứng dụng. Hãy cùng nhau đón nhận tương lai của phát triển React và xây dựng những ứng dụng nhanh hơn, dễ mở rộng hơn với những công cụ tốt nhất!\n"}]